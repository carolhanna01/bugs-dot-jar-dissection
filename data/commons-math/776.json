{"nb_failure": 4, "nb_error": 0, "failing_tests": ["testConstructorTooLow(org.apache.commons.math3.genetics.ElitisticListPopulationTest): Expected exception: org.apache.commons.math3.exception.OutOfRangeException", "testConstructorTooHigh(org.apache.commons.math3.genetics.ElitisticListPopulationTest): Expected exception: org.apache.commons.math3.exception.OutOfRangeException", "testChromosomeListConstructorTooLow(org.apache.commons.math3.genetics.ElitisticListPopulationTest): Expected exception: org.apache.commons.math3.exception.OutOfRangeException", "testChromosomeListConstructorTooHigh(org.apache.commons.math3.genetics.ElitisticListPopulationTest): Expected exception: org.apache.commons.math3.exception.OutOfRangeException"], "patch": "diff --git a/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java b/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java\nindex a309080..829c97d 100644\n--- a/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java\n+++ b/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java\n@@ -24,7 +24,7 @@ import org.apache.commons.math3.exception.util.LocalizedFormats;\n import org.apache.commons.math3.util.FastMath;\n \n /**\n- * Population of chromosomes which uses elitism (certain percentace of the best\n+ * Population of chromosomes which uses elitism (certain percentage of the best\n  * chromosomes is directly copied to the next generation).\n  *\n  * @version $Id$\n@@ -42,12 +42,13 @@ public class ElitisticListPopulation extends ListPopulation {\n      * @param populationLimit maximal size of the population\n      * @param elitismRate how many best chromosomes will be directly transferred to the\n      *                    next generation [in %]\n+     * @throws OutOfRangeException if the elitism rate is outside the [0, 1] range\n      */\n     public ElitisticListPopulation(final List<Chromosome> chromosomes,\n                                    final int populationLimit,\n                                    final double elitismRate) {\n         super(chromosomes, populationLimit);\n-        this.elitismRate = elitismRate;\n+        setElitismRate(elitismRate);\n     }\n \n     /**\n@@ -57,10 +58,11 @@ public class ElitisticListPopulation extends ListPopulation {\n      * @param populationLimit maximal size of the population\n      * @param elitismRate how many best chromosomes will be directly transferred to the\n      *                    next generation [in %]\n+     * @throws OutOfRangeException if the elitism rate is outside the [0, 1] range\n      */\n     public ElitisticListPopulation(final int populationLimit, final double elitismRate) {\n         super(populationLimit);\n-        this.elitismRate = elitismRate;\n+        setElitismRate(elitismRate);\n     }\n \n     /**\n", "nb_test": 3499, "nb_skipped": 1, "fix_commit": "b9ca51f0", "id": "776"}