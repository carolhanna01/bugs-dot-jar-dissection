{"files": 1, "singleLine": false, "nb_error": 0, "failing_tests": ["testReportingExcludeDefaultsInheritance(org.apache.maven.project.inheritance.DefaultModelInheritanceAssemblerTest): Check excludeDefaults is inherited"], "nb_test": 79, "patch": "diff --git a/maven-project/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java b/maven-project/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java\nindex 39b8488..2839c50 100644\n--- a/maven-project/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java\n+++ b/maven-project/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java\n@@ -16,15 +16,6 @@ package org.apache.maven.project.inheritance;\n  * limitations under the License.\n  */\n \n-import java.util.ArrayList;\n-import java.util.HashMap;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Properties;\n-import java.util.StringTokenizer;\n-import java.util.TreeMap;\n-\n import org.apache.maven.model.Build;\n import org.apache.maven.model.Dependency;\n import org.apache.maven.model.DependencyManagement;\n@@ -38,6 +29,15 @@ import org.apache.maven.model.Site;\n import org.apache.maven.project.ModelUtils;\n import org.codehaus.plexus.util.StringUtils;\n \n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n+import java.util.StringTokenizer;\n+import java.util.TreeMap;\n+\n /**\n  * @author <a href=\"mailto:jason@maven.org\">Jason van Zyl </a>\n  * @version $Id: DefaultModelInheritanceAssembler.java,v 1.4 2004/08/23 20:24:54\n@@ -275,6 +275,8 @@ public class DefaultModelInheritanceAssembler\n                 child.setReporting( childReporting );\n             }\n \n+            childReporting.setExcludeDefaults( parentReporting.isExcludeDefaults() );\n+\n             if ( StringUtils.isEmpty( childReporting.getOutputDirectory() ) )\n             {\n                 childReporting.setOutputDirectory( parentReporting.getOutputDirectory() );\n@@ -422,25 +424,28 @@ public class DefaultModelInheritanceAssembler\n \n             if ( StringUtils.isEmpty( childScm.getConnection() ) && !StringUtils.isEmpty( parentScm.getConnection() ) )\n             {\n-                childScm.setConnection( appendPath( parentScm.getConnection(), child.getArtifactId(), childPathAdjustment, appendPaths ) );\n+                childScm.setConnection(\n+                    appendPath( parentScm.getConnection(), child.getArtifactId(), childPathAdjustment, appendPaths ) );\n             }\n \n             if ( StringUtils.isEmpty( childScm.getDeveloperConnection() ) &&\n                 !StringUtils.isEmpty( parentScm.getDeveloperConnection() ) )\n             {\n                 childScm\n-                    .setDeveloperConnection(\n-                        appendPath( parentScm.getDeveloperConnection(), child.getArtifactId(), childPathAdjustment, appendPaths ) );\n+                    .setDeveloperConnection( appendPath( parentScm.getDeveloperConnection(), child.getArtifactId(),\n+                                                         childPathAdjustment, appendPaths ) );\n             }\n \n             if ( StringUtils.isEmpty( childScm.getUrl() ) && !StringUtils.isEmpty( parentScm.getUrl() ) )\n             {\n-                childScm.setUrl( appendPath( parentScm.getUrl(), child.getArtifactId(), childPathAdjustment, appendPaths ) );\n+                childScm.setUrl(\n+                    appendPath( parentScm.getUrl(), child.getArtifactId(), childPathAdjustment, appendPaths ) );\n             }\n         }\n     }\n \n-    private void assembleDistributionInheritence( Model child, Model parent, String childPathAdjustment, boolean appendPaths )\n+    private void assembleDistributionInheritence( Model child, Model parent, String childPathAdjustment,\n+                                                  boolean appendPaths )\n     {\n         if ( parent.getDistributionManagement() != null )\n         {\n@@ -471,7 +476,8 @@ public class DefaultModelInheritanceAssembler\n \n                     if ( site.getUrl() != null )\n                     {\n-                        site.setUrl( appendPath( site.getUrl(), child.getArtifactId(), childPathAdjustment, appendPaths ) );\n+                        site.setUrl(\n+                            appendPath( site.getUrl(), child.getArtifactId(), childPathAdjustment, appendPaths ) );\n                     }\n                 }\n             }\n@@ -517,56 +523,56 @@ public class DefaultModelInheritanceAssembler\n     protected String appendPath( String parentPath, String childPath, String pathAdjustment, boolean appendPaths )\n     {\n         List pathFragments = new ArrayList();\n-        \n+\n         String rootPath = parentPath;\n \n         String protocol = null;\n         int protocolIdx = rootPath.indexOf( \"://\" );\n-        \n+\n         if ( protocolIdx > -1 )\n         {\n             protocol = rootPath.substring( 0, protocolIdx + 3 );\n             rootPath = rootPath.substring( protocolIdx + 3 );\n         }\n-        \n+\n         pathFragments.add( rootPath );\n-        \n+\n         if ( appendPaths )\n         {\n             if ( pathAdjustment != null )\n             {\n                 pathFragments.add( pathAdjustment );\n             }\n-            \n+\n             pathFragments.add( childPath );\n         }\n-        \n+\n         StringBuffer cleanedPath = new StringBuffer();\n-        \n+\n         if ( protocol != null )\n         {\n             cleanedPath.append( protocol );\n         }\n-        \n+\n         if ( rootPath.startsWith( \"/\" ) )\n         {\n             cleanedPath.append( '/' );\n         }\n-        \n+\n         String lastToken = null;\n         String currentToken = null;\n-        \n+\n         for ( Iterator it = pathFragments.iterator(); it.hasNext(); )\n         {\n             String pathFragment = (String) it.next();\n-            \n+\n             StringTokenizer tokens = new StringTokenizer( pathFragment, \"/\" );\n-            \n-            while( tokens.hasMoreTokens() )\n+\n+            while ( tokens.hasMoreTokens() )\n             {\n                 lastToken = currentToken;\n                 currentToken = tokens.nextToken();\n-                \n+\n                 if ( \"..\".equals( currentToken ) )\n                 {\n                     // trim the previous path part off...\n@@ -579,12 +585,12 @@ public class DefaultModelInheritanceAssembler\n                 }\n             }\n         }\n-        \n+\n         if ( !childPath.endsWith( \"/\" ) && appendPaths )\n         {\n             cleanedPath.setLength( cleanedPath.length() - 1 );\n         }\n-        \n+\n         return cleanedPath.toString();\n     }\n \n", "project": "maven", "linesAdd": 37, "nb_skipped": 0, "fix_commit": "ad38e46b", "nb_failure": 1, "id": "1999", "linesRem": 31}