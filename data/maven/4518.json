{"nb_failure": 2, "nb_error": 0, "failing_tests": ["testVersionRangeInclusiveBounds(org.apache.maven.model.profile.activation.JdkVersionProfileActivatorTest)", "testVersionRangeExclusiveBounds(org.apache.maven.model.profile.activation.JdkVersionProfileActivatorTest)"], "patch": "diff --git a/maven-model-builder/src/main/java/org/apache/maven/model/profile/activation/JdkVersionProfileActivator.java b/maven-model-builder/src/main/java/org/apache/maven/model/profile/activation/JdkVersionProfileActivator.java\nindex 617ffa2..1ae90e1 100644\n--- a/maven-model-builder/src/main/java/org/apache/maven/model/profile/activation/JdkVersionProfileActivator.java\n+++ b/maven-model-builder/src/main/java/org/apache/maven/model/profile/activation/JdkVersionProfileActivator.java\n@@ -108,20 +108,10 @@ public class JdkVersionProfileActivator\n         List<String> valueTokens = new ArrayList<String>( Arrays.asList( value.split( \"[\\\\.\\\\-\\\\_]\" ) ) );\n         List<String> rangeValueTokens = new ArrayList<String>( Arrays.asList( rangeValue.value.split( \"\\\\.\" ) ) );\n \n-        int max = Math.max( valueTokens.size(), rangeValueTokens.size() );\n-        addZeroTokens( valueTokens, max );\n-        addZeroTokens( rangeValueTokens, max );\n+        addZeroTokens( valueTokens, 3 );\n+        addZeroTokens( rangeValueTokens, 3 );\n \n-        if ( value.equals( rangeValue.getValue() ) )\n-        {\n-            if ( !rangeValue.isClosed() )\n-            {\n-                return isLeft ? -1 : 1;\n-            }\n-            return 0;\n-        }\n-\n-        for ( int i = 0; i < valueTokens.size() && i < rangeValueTokens.size(); i++ )\n+        for ( int i = 0; i < 3; i++ )\n         {\n             int x = Integer.parseInt( valueTokens.get( i ) );\n             int y = Integer.parseInt( rangeValueTokens.get( i ) );\n@@ -143,12 +133,9 @@ public class JdkVersionProfileActivator\n \n     private static void addZeroTokens( List<String> tokens, int max )\n     {\n-        if ( tokens.size() < max )\n+        while ( tokens.size() < max )\n         {\n-            for ( int i = 0; i < ( max - tokens.size() ); i++ )\n-            {\n-                tokens.add( \"0\" );\n-            }\n+            tokens.add( \"0\" );\n         }\n     }\n \n", "nb_test": 45, "nb_skipped": 0, "fix_commit": "f5ebc72d", "id": "4518"}