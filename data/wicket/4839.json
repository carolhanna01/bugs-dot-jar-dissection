{"nb_failure": 1, "nb_error": 0, "failing_tests": ["customDateConverter(org.apache.wicket.ConverterLocatorTest): expected not same"], "patch": "diff --git a/wicket-core/src/main/java/org/apache/wicket/ConverterLocator.java b/wicket-core/src/main/java/org/apache/wicket/ConverterLocator.java\nindex 5e48a83..6c85808 100644\n--- a/wicket-core/src/main/java/org/apache/wicket/ConverterLocator.java\n+++ b/wicket-core/src/main/java/org/apache/wicket/ConverterLocator.java\n@@ -189,33 +189,32 @@ public class ConverterLocator implements IConverterLocator\n \tpublic final <C> IConverter<C> get(Class<C> c)\n \t{\n \t\t@SuppressWarnings(\"unchecked\")\n-\t\tfinal IConverter<C> converter;\n+\t\tIConverter<C> converter = (IConverter<C>)classToConverter.get(c.getName());\n \n-\t\t// Date based converters work with thread unsafe DateFormats and\n-\t\t// a new instance should be created for each usage\n-\t\tif (Date.class.equals(c))\n-\t\t{\n-\t\t\tconverter = (IConverter<C>) new DateConverter();\n-\t\t}\n-\t\telse if  (java.sql.Date.class.equals(c))\n-\t\t{\n-\t\t\tconverter = (IConverter<C>) new SqlDateConverter();\n-\t\t}\n-\t\telse if (java.sql.Time.class.equals(c))\n-\t\t{\n-\t\t\tconverter = (IConverter<C>) new SqlTimeConverter();\n-\t\t}\n-\t\telse if (java.sql.Timestamp.class.equals(c))\n-\t\t{\n-\t\t\tconverter = (IConverter<C>) new SqlTimestampConverter();\n-\t\t}\n-\t\telse if (Calendar.class.equals(c))\n-\t\t{\n-\t\t\tconverter = (IConverter<C>) new CalendarConverter();\n-\t\t}\n-\t\telse\n+\t\tif (converter == null)\n \t\t{\n-\t\t\tconverter = (IConverter<C>)classToConverter.get(c.getName());\n+\t\t\t// Date based converters work with thread unsafe DateFormats and\n+\t\t\t// a new instance should be created for each usage\n+\t\t\tif (Date.class.equals(c))\n+\t\t\t{\n+\t\t\t\tconverter = (IConverter<C>) new DateConverter();\n+\t\t\t}\n+\t\t\telse if  (java.sql.Date.class.equals(c))\n+\t\t\t{\n+\t\t\t\tconverter = (IConverter<C>) new SqlDateConverter();\n+\t\t\t}\n+\t\t\telse if (java.sql.Time.class.equals(c))\n+\t\t\t{\n+\t\t\t\tconverter = (IConverter<C>) new SqlTimeConverter();\n+\t\t\t}\n+\t\t\telse if (java.sql.Timestamp.class.equals(c))\n+\t\t\t{\n+\t\t\t\tconverter = (IConverter<C>) new SqlTimestampConverter();\n+\t\t\t}\n+\t\t\telse if (Calendar.class.equals(c))\n+\t\t\t{\n+\t\t\t\tconverter = (IConverter<C>) new CalendarConverter();\n+\t\t\t}\n \t\t}\n \t\treturn converter;\n \t}\n", "nb_test": 1425, "nb_skipped": 5, "fix_commit": "8b294488", "id": "4839"}