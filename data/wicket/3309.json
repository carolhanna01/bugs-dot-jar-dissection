{"nb_failure": 2, "nb_error": 0, "failing_tests": ["testAddChildOnRootAtAnOnRootLessTree(org.apache.wicket.markup.html.tree.TreeTest)", "testAddGrandchildOnRootAtAnRootLessTree(org.apache.wicket.markup.html.tree.TreeTest)"], "patch": "diff --git a/wicket-core/src/main/java/org/apache/wicket/markup/html/tree/AbstractTree.java b/wicket-core/src/main/java/org/apache/wicket/markup/html/tree/AbstractTree.java\nindex ed9843a..2547853 100644\n--- a/wicket-core/src/main/java/org/apache/wicket/markup/html/tree/AbstractTree.java\n+++ b/wicket-core/src/main/java/org/apache/wicket/markup/html/tree/AbstractTree.java\n@@ -832,13 +832,17 @@ public abstract class AbstractTree extends Panel\n \t\t\t{\n \t\t\t\twasLeaf = eventChildren.contains(getChildAt(parentNode, i));\n \t\t\t}\n-\n-\t\t\tif (wasLeaf)\n+\t\t\t// if parent was a leaf, testing if wasn't an not presented root\n+\t\t\tif (wasLeaf && !(parentItem.getParentItem() == null && isRootLess()))\n \t\t\t{\n-\t\t\t\t// parentNode now has children for the first time, so we need to invalidate\n+\t\t\t\t// parentNode now has children for the first time, so we may need to invalidate\n \t\t\t\t// grandparent so that parentNode's junctionLink gets rebuilt with a plus/minus link\n \t\t\t\tObject grandparentNode = getParentNode(parentNode);\n-\t\t\t\tinvalidateNodeWithChildren(grandparentNode);\n+\t\t\t\t// not invalidating if the grandparent is a not presented root\n+\t\t\t\tif (!(getParentNode(grandparentNode) == null && isRootLess()))\n+\t\t\t\t{\n+\t\t\t\t\tinvalidateNodeWithChildren(grandparentNode);\n+\t\t\t\t}\n \t\t\t\tgetTreeState().expandNode(parentNode);\n \t\t\t}\n \t\t\telse\n", "nb_test": 1045, "nb_skipped": 0, "fix_commit": "debca73b", "id": "3309"}