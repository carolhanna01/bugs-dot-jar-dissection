{"files": 1, "singleLine": false, "nb_error": 0, "failing_tests": ["compact(org.apache.wicket.request.UrlTest): expected:<a/[]d> but was:<a/[b/../]d>"], "nb_test": 99, "patch": "diff --git a/wicket-request/src/main/java/org/apache/wicket/request/Url.java b/wicket-request/src/main/java/org/apache/wicket/request/Url.java\nindex 11f6b47..e950f6f 100755\n--- a/wicket-request/src/main/java/org/apache/wicket/request/Url.java\n+++ b/wicket-request/src/main/java/org/apache/wicket/request/Url.java\n@@ -1219,17 +1219,21 @@ public class Url implements Serializable\n \t\t\t// drop '.' from path\n \t\t\tif (\".\".equals(segment))\n \t\t\t{\n-\t\t\t\tcontinue;\n+\t\t\t\t// skip\n+\t\t\t}\n+\t\t\telse if (\"..\".equals(segment) && url.segments.isEmpty() == false)\n+\t\t\t{\n+\t\t\t\turl.segments.remove(url.segments.size() - 1);\n \t\t\t}\n-\n \t\t\t// skip segment if following segment is a '..'\n-\t\t\tif ((i + 1) < segments.size() && \"..\".equals(segments.get(i + 1)))\n+\t\t\telse if ((i + 1) < segments.size() && \"..\".equals(segments.get(i + 1)))\n \t\t\t{\n \t\t\t\ti++;\n-\t\t\t\tcontinue;\n \t\t\t}\n-\n-\t\t\turl.segments.add(segment);\n+\t\t\telse\n+\t\t\t{\n+\t\t\t\turl.segments.add(segment);\n+\t\t\t}\n \t\t}\n \t\treturn url;\n \t}\n", "project": "wicket", "linesAdd": 10, "nb_skipped": 0, "fix_commit": "3fc7234e", "nb_failure": 1, "id": "5345", "linesRem": 6}