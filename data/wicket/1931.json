{"nb_failure": 1, "nb_error": 0, "failing_tests": ["testSubmitMultipartForm(org.apache.wicket.util.tester.FormTesterTest)"], "patch": "diff --git a/wicket/src/main/java/org/apache/wicket/protocol/http/MockHttpServletRequest.java b/wicket/src/main/java/org/apache/wicket/protocol/http/MockHttpServletRequest.java\nindex e282be1..c521441 100644\n--- a/wicket/src/main/java/org/apache/wicket/protocol/http/MockHttpServletRequest.java\n+++ b/wicket/src/main/java/org/apache/wicket/protocol/http/MockHttpServletRequest.java\n@@ -487,33 +487,19 @@ public class MockHttpServletRequest implements HttpServletRequest\n \t */\n \tpublic ServletInputStream getInputStream() throws IOException\n \t{\n-\t\tif (uploadedFiles != null && uploadedFiles.size() > 0)\n-\t\t{\n-\t\t\tbyte[] request = buildRequest();\n+\t\tbyte[] request = buildRequest();\n \n-\t\t\t// Ok lets make an input stream to return\n-\t\t\tfinal ByteArrayInputStream bais = new ByteArrayInputStream(request);\n+\t\t// Ok lets make an input stream to return\n+\t\tfinal ByteArrayInputStream bais = new ByteArrayInputStream(request);\n \n-\t\t\treturn new ServletInputStream()\n-\t\t\t{\n-\t\t\t\t@Override\n-\t\t\t\tpublic int read()\n-\t\t\t\t{\n-\t\t\t\t\treturn bais.read();\n-\t\t\t\t}\n-\t\t\t};\n-\t\t}\n-\t\telse\n+\t\treturn new ServletInputStream()\n \t\t{\n-\t\t\treturn new ServletInputStream()\n+\t\t\t@Override\n+\t\t\tpublic int read()\n \t\t\t{\n-\t\t\t\t@Override\n-\t\t\t\tpublic int read()\n-\t\t\t\t{\n-\t\t\t\t\treturn -1;\n-\t\t\t\t}\n-\t\t\t};\n-\t\t}\n+\t\t\t\treturn bais.read();\n+\t\t\t}\n+\t\t};\n \t}\n \n \t/**\n", "nb_test": 723, "nb_skipped": 0, "fix_commit": "986848f7)", "id": "1931"}