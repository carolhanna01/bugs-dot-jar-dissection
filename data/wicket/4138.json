{
  "files": 2, 
  "singleLine": false, 
  "nb_error": 0, 
  "failing_tests": [
    "parseForwardAttributes(org.apache.wicket.protocol.http.servlet.ServletWebRequestTest): expected:<[some/forwarded/url]> but was:<[request/Uri]>"
  ], 
  "nb_test": 1244, 
  "patch": "diff --git a/wicket-core/src/main/java/org/apache/wicket/protocol/http/servlet/ForwardAttributes.java b/wicket-core/src/main/java/org/apache/wicket/protocol/http/servlet/ForwardAttributes.java\nnew file mode 100644\nindex 0000000..45c3389\n--- /dev/null\n+++ b/wicket-core/src/main/java/org/apache/wicket/protocol/http/servlet/ForwardAttributes.java\n@@ -0,0 +1,141 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\r\n+ * contributor license agreements.  See the NOTICE file distributed with\r\n+ * this work for additional information regarding copyright ownership.\r\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\r\n+ * (the \"License\"); you may not use this file except in compliance with\r\n+ * the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *      http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing, software\r\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+ * See the License for the specific language governing permissions and\r\n+ * limitations under the License.\r\n+ */\r\n+package org.apache.wicket.protocol.http.servlet;\r\n+\r\n+import javax.servlet.ServletRequest;\r\n+import javax.servlet.http.HttpServletRequest;\r\n+\r\n+import org.apache.wicket.util.lang.Args;\r\n+import org.apache.wicket.util.string.Strings;\r\n+\r\n+/**\r\n+ * Represents additional error parameters present in a {@link ServletRequest} when the servlet\r\n+ * container is handling an error or a forward to an error page mapped by {@code error-page} element\r\n+ * in {@code web.xml}.\r\n+ * \r\n+ * See documentation for the following request attributes for the values stored in this object:\r\n+ * <ul>\r\n+ * <li>javax.servlet.error.status_code</li>\r\n+ * <li>javax.servlet.error.message</li>\r\n+ * <li>javax.servlet.error.request_uri</li>\r\n+ * <li>javax.servlet.error.servlet_name</li>\r\n+ * <li>javax.servlet.error.exception_type</li>\r\n+ * <li>javax.servlet.error.exception</li>\r\n+ * </ul>\r\n+ * \r\n+ */\r\n+public class ForwardAttributes\r\n+{\r\n+\t// javax.servlet.forward.request_uri\r\n+\tprivate final String requestUri;\r\n+\r\n+\t// javax.servlet.forward.servlet_path\r\n+\tprivate final String servletPath;\r\n+\r\n+\t// javax.servlet.forward.context_path\r\n+\tprivate final String contextPath;\r\n+\r\n+\t// javax.servlet.forward.query_string\r\n+\tprivate final String queryString;\r\n+\r\n+\t/**\r\n+\t * Constructor.\r\n+\t * \r\n+\t * @param requestUri\r\n+\t * @param servletPath\r\n+\t * @param contextPath\r\n+\t * @param queryString\r\n+\t */\r\n+\tprivate ForwardAttributes(String requestUri, String servletPath, String contextPath,\r\n+\t\tString queryString)\r\n+\t{\r\n+\t\tthis.requestUri = requestUri;\r\n+\t\tthis.servletPath = servletPath;\r\n+\t\tthis.contextPath = contextPath;\r\n+\t\tthis.queryString = queryString;\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * Gets requestUri.\r\n+\t * \r\n+\t * @return requestUri\r\n+\t */\r\n+\tpublic String getRequestUri()\r\n+\t{\r\n+\t\treturn requestUri;\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * Gets servletPath.\r\n+\t * \r\n+\t * @return servletPath\r\n+\t */\r\n+\tpublic String getServletPath()\r\n+\t{\r\n+\t\treturn servletPath;\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * Gets contextPath.\r\n+\t * \r\n+\t * @return contextPath\r\n+\t */\r\n+\tpublic String getContextPath()\r\n+\t{\r\n+\t\treturn contextPath;\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * Gets the query string.\r\n+\t * \r\n+\t * @return the query string\r\n+\t */\r\n+\tpublic String getQueryString()\r\n+\t{\r\n+\t\treturn queryString;\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * Factory for creating instances of this class.\r\n+\t * \r\n+\t * @param request\r\n+\t * @return instance of request contains forward attributes or {@code null} if it does not.\r\n+\t */\r\n+\tpublic static ForwardAttributes of(HttpServletRequest request)\r\n+\t{\r\n+\t\tArgs.notNull(request, \"request\");\r\n+\r\n+\t\tfinal String requestUri = (String)request.getAttribute(\"javax.servlet.forward.request_uri\");\r\n+\t\tfinal String servletPath = (String)request.getAttribute(\"javax.servlet.forward.servlet_path\");\r\n+\t\tfinal String contextPath = (String)request.getAttribute(\"javax.servlet.forward.context_path\");\r\n+\t\tfinal String queryString = (String)request.getAttribute(\"javax.servlet.forward.query_string\");\r\n+\r\n+\t\tif (!Strings.isEmpty(requestUri) || !Strings.isEmpty(servletPath) ||\r\n+\t\t\t!Strings.isEmpty(contextPath) || !Strings.isEmpty(queryString))\r\n+\t\t{\r\n+\t\t\treturn new ForwardAttributes(requestUri, servletPath, contextPath, queryString);\r\n+\t\t}\r\n+\t\treturn null;\r\n+\t}\r\n+\r\n+\t@Override\r\n+\tpublic String toString()\r\n+\t{\r\n+\t\treturn \"ForwardAttributes [requestUri=\" + requestUri + \", servletPath=\" + servletPath +\r\n+\t\t\t\", contextPath=\" + contextPath + \", queryString=\" + queryString + \"]\";\r\n+\t}\r\n+}\r\ndiff --git a/wicket-core/src/main/java/org/apache/wicket/protocol/http/servlet/ServletWebRequest.java b/wicket-core/src/main/java/org/apache/wicket/protocol/http/servlet/ServletWebRequest.java\nindex 68f263b..576f44c 100644\n--- a/wicket-core/src/main/java/org/apache/wicket/protocol/http/servlet/ServletWebRequest.java\n+++ b/wicket-core/src/main/java/org/apache/wicket/protocol/http/servlet/ServletWebRequest.java\n@@ -66,6 +66,8 @@ public class ServletWebRequest extends WebRequest\n \n \tprivate final ErrorAttributes errorAttributes;\n \n+\tprivate final ForwardAttributes forwardAttributes;\n+\n \t/**\n \t * Construct.\n \t * \n@@ -96,6 +98,8 @@ public class ServletWebRequest extends WebRequest\n \n \t\terrorAttributes = ErrorAttributes.of(httpServletRequest);\n \n+\t\tforwardAttributes = ForwardAttributes.of(httpServletRequest);\n+\n \t\tif (url != null)\n \t\t{\n \t\t\tthis.url = url;\n@@ -129,6 +133,12 @@ public class ServletWebRequest extends WebRequest\n \t\t\t\t.toString();\n \t\t\treturn getContextRelativeUrl(problematicURI, filterPrefix);\n \t\t}\n+\t\telse if (forwardAttributes != null && !Strings.isEmpty(forwardAttributes.getRequestUri()))\n+\t\t{\n+\t\t\tString forwardURI = Url.parse(forwardAttributes.getRequestUri(), getCharset())\n+\t\t\t\t.toString();\n+\t\t\treturn getContextRelativeUrl(forwardURI, filterPrefix);\n+\t\t}\n \t\telse if (!isAjax())\n \t\t{\n \t\t\treturn getContextRelativeUrl(httpServletRequest.getRequestURI(), filterPrefix);\n@@ -456,6 +466,7 @@ public class ServletWebRequest extends WebRequest\n \t@Override\n \tpublic boolean shouldPreserveClientUrl()\n \t{\n-\t\treturn errorAttributes != null && !Strings.isEmpty(errorAttributes.getRequestUri());\n+\t\treturn (errorAttributes != null && !Strings.isEmpty(errorAttributes.getRequestUri()) || forwardAttributes != null &&\n+\t\t\t!Strings.isEmpty(forwardAttributes.getRequestUri()));\n \t}\n }\n", 
  "project": "wicket", 
  "linesAdd": 153, 
  "nb_skipped": 3, 
  "fix_commit": "7c89598a", 
  "nb_failure": 1, 
  "id": "4138", 
  "linesRem": 1
}