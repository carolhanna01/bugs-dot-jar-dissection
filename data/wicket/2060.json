{
  "files": 1, 
  "singleLine": false, 
  "nb_error": 0, 
  "failing_tests": [
    "testUNIXWICKET501(org.apache.wicket.util.string.JavascriptStripperTest)", 
    "testDOSWICKET501(org.apache.wicket.util.string.JavascriptStripperTest)", 
    "testMACWICKET501(org.apache.wicket.util.string.JavascriptStripperTest)", 
    "testRegexp(org.apache.wicket.util.string.JavascriptStripperTest)", 
    "testRegexp4(org.apache.wicket.util.string.JavascriptStripperTest)", 
    "testWICKET1806(org.apache.wicket.util.string.JavascriptStripperTest)", 
    "testWICKET2060_1(org.apache.wicket.util.string.JavascriptStripperTest)", 
    "testWICKET2060_2(org.apache.wicket.util.string.JavascriptStripperTest)", 
    "testWICKET2060_3(org.apache.wicket.util.string.JavascriptStripperTest)"
  ], 
  "nb_test": 760, 
  "patch": "diff --git a/wicket/src/main/java/org/apache/wicket/util/string/JavascriptStripper.java b/wicket/src/main/java/org/apache/wicket/util/string/JavascriptStripper.java\nindex e21e9d4..10d05a2 100644\n--- a/wicket/src/main/java/org/apache/wicket/util/string/JavascriptStripper.java\n+++ b/wicket/src/main/java/org/apache/wicket/util/string/JavascriptStripper.java\n@@ -19,7 +19,7 @@ package org.apache.wicket.util.string;\n \n /**\n  * Strips comments and whitespace from javascript\n- *\n+ * \n  * @author Matej Knopp\n  */\n public class JavascriptStripper\n@@ -68,7 +68,7 @@ public class JavascriptStripper\n \n \t/**\n \t * Removes javascript comments and whitespace from specified string.\n-\t *\n+\t * \n \t * @param original\n \t *            Source string\n \t * @return String with removed comments and whitespace\n@@ -78,6 +78,7 @@ public class JavascriptStripper\n \t\t// let's be optimistic\n \t\tAppendingStringBuffer result = new AppendingStringBuffer(original.length() / 2);\n \t\tint state = REGULAR_TEXT;\n+\t\tboolean wasNewLineInWhitespace = false;\n \n \t\tfor (int i = 0; i < original.length(); ++i)\n \t\t{\n@@ -87,6 +88,12 @@ public class JavascriptStripper\n \n \t\t\tif (state == WHITE_SPACE)\n \t\t\t{\n+\t\t\t\t// WICKET 2060\n+\t\t\t\tif (c == '\\n' && !wasNewLineInWhitespace)\n+\t\t\t\t{\n+\t\t\t\t\tresult.append(\"\\n\");\n+\t\t\t\t\twasNewLineInWhitespace = true;\n+\t\t\t\t}\n \t\t\t\tif (Character.isWhitespace(next) == false)\n \t\t\t\t{\n \t\t\t\t\tstate = REGULAR_TEXT;\n@@ -123,7 +130,7 @@ public class JavascriptStripper\n \t\t\t\t\t\t\tcontinue;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (tmp == '=' || tmp == '(' || tmp == '{' || tmp == ':' || tmp == ',' ||\n-\t\t\t\t\t\t\ttmp == '[')\n+\t\t\t\t\t\t\ttmp == '[' || tmp == ';')\n \t\t\t\t\t\t{\n \t\t\t\t\t\t\tstate = REG_EXP;\n \t\t\t\t\t\t\tbreak;\n@@ -133,9 +140,18 @@ public class JavascriptStripper\n \t\t\t\t}\n \t\t\t\telse if (Character.isWhitespace(c) && Character.isWhitespace(next))\n \t\t\t\t{\n+\t\t\t\t\t// WICKET-2060\n+\t\t\t\t\tif (c == '\\n' || next == '\\n')\n+\t\t\t\t\t{\n+\t\t\t\t\t\tc = '\\n';\n+\t\t\t\t\t\twasNewLineInWhitespace = true;\n+\t\t\t\t\t}\n+\t\t\t\t\telse\n+\t\t\t\t\t{\n+\t\t\t\t\t\tc = ' ';\n+\t\t\t\t\t}\n \t\t\t\t\t// ignore all whitespace characters after this one\n \t\t\t\t\tstate = WHITE_SPACE;\n-\t\t\t\t\tc = '\\n';\n \t\t\t\t}\n \t\t\t\telse if (c == '\\'')\n \t\t\t\t{\n", 
  "project": "wicket", 
  "linesAdd": 20, 
  "nb_skipped": 0, 
  "fix_commit": "0578d6ee", 
  "nb_failure": 9, 
  "id": "2060", 
  "linesRem": 4
}