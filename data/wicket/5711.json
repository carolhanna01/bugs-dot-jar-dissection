{"files": 1, "singleLine": false, "nb_error": 0, "failing_tests": ["OnChangeAjaxBehaviorTest.rendering:39->WicketTestCase.executeTest:99->Assert.assertEquals:115 org/apache/wicket/ajax/form/OnChangeAjaxBehaviorTestPage_expected.html expected:<...d1\",\"e\":\"inputchange[ change]\"});;", "Wicket.Ajax.aj...> but was:<...d1\",\"e\":\"inputchange[]\"});;", "Wicket.Ajax.aj...>"], "nb_test": 1690, "patch": "diff --git a/wicket-core/src/main/java/org/apache/wicket/ajax/form/OnChangeAjaxBehavior.java b/wicket-core/src/main/java/org/apache/wicket/ajax/form/OnChangeAjaxBehavior.java\nindex f363cd8..27c229c 100644\n--- a/wicket-core/src/main/java/org/apache/wicket/ajax/form/OnChangeAjaxBehavior.java\n+++ b/wicket-core/src/main/java/org/apache/wicket/ajax/form/OnChangeAjaxBehavior.java\n@@ -47,7 +47,8 @@ public abstract class OnChangeAjaxBehavior extends AjaxFormComponentUpdatingBeha\n \t * for text input form component depending on the browser.\n \t * 'change' is used as a fallback for all other form component types.\n \t */\n-\tpublic static final String EVENT_INPUTCHANGE = \"inputchange\";\n+\tpublic static final String EVENT_NAME = \"inputchange change\";\n+\n \tpublic static final String EVENT_CHANGE = \"change\";\n \n \t/**\n@@ -55,23 +56,19 @@ public abstract class OnChangeAjaxBehavior extends AjaxFormComponentUpdatingBeha\n \t */\n \tpublic OnChangeAjaxBehavior()\n \t{\n-\t\tsuper(EVENT_INPUTCHANGE + \" \" + EVENT_CHANGE);\n+\t\tsuper(EVENT_NAME);\n \t}\n \n \t@Override\n \tprotected void updateAjaxAttributes(AjaxRequestAttributes attributes) \n \t{\n \t\tsuper.updateAjaxAttributes(attributes);\n-\t\t\n+\n \t\tComponent component = getComponent();\n-\t\t\n-\t\t//textfiels and textareas will trigger this behavior with event 'inputchange'\n-\t\t//while all the other components will use 'change'\n-\t\tif (component instanceof TextField || component instanceof TextArea) \n-\t\t{\n-\t\t\tattributes.setEventNames(EVENT_INPUTCHANGE);\n-\t\t} \n-\t\telse \n+\n+\t\t// textfiels and textareas will trigger this behavior with either 'inputchange' or 'change' events\n+\t\t// all the other components will use just 'change'\n+\t\tif (!(component instanceof TextField || component instanceof TextArea))\n \t\t{\n \t\t\tattributes.setEventNames(EVENT_CHANGE);\n \t\t}\n", "project": "wicket", "linesAdd": 8, "nb_skipped": 1, "fix_commit": "5837817c", "nb_failure": 1, "id": "5711", "linesRem": 11}