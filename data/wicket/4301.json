{"nb_failure": 0, "nb_error": 1, "failing_tests": ["noData(org.apache.wicket.request.resource.ByteArrayResourceTest): ByteArrayResource's data cannot be 'null'."], "patch": "diff --git a/wicket-core/src/main/java/org/apache/wicket/request/resource/ByteArrayResource.java b/wicket-core/src/main/java/org/apache/wicket/request/resource/ByteArrayResource.java\nindex d11cab8..544f7ad 100644\n--- a/wicket-core/src/main/java/org/apache/wicket/request/resource/ByteArrayResource.java\n+++ b/wicket-core/src/main/java/org/apache/wicket/request/resource/ByteArrayResource.java\n@@ -21,6 +21,8 @@ import java.net.URLConnection;\n import org.apache.wicket.WicketRuntimeException;\n import org.apache.wicket.util.time.Time;\n \n+import javax.servlet.http.HttpServletResponse;\n+\n /**\n  * An {@link IResource} for byte arrays. The byte array can be static - passed to the constructor,\n  * or dynamic - by overriding\n@@ -119,32 +121,35 @@ public class ByteArrayResource extends AbstractResource\n \t\tfinal byte[] data = getData(attributes);\n \t\tif (data == null)\n \t\t{\n-\t\t\tthrow new WicketRuntimeException(\"ByteArrayResource's data cannot be 'null'.\");\n+\t\t\tresponse.setError(HttpServletResponse.SC_NOT_FOUND);\n \t\t}\n-\t\tresponse.setContentLength(data.length);\n-\n-\t\tif (response.dataNeedsToBeWritten(attributes))\n+\t\telse\n \t\t{\n-\t\t\tif (filename != null)\n-\t\t\t{\n-\t\t\t\tresponse.setFileName(filename);\n-\t\t\t\tresponse.setContentDisposition(ContentDisposition.ATTACHMENT);\n-\t\t\t}\n-\t\t\telse\n-\t\t\t{\n-\t\t\t\tresponse.setContentDisposition(ContentDisposition.INLINE);\n-\t\t\t}\n+\t\t\tresponse.setContentLength(data.length);\n \n-\t\t\tresponse.setWriteCallback(new WriteCallback()\n+\t\t\tif (response.dataNeedsToBeWritten(attributes))\n \t\t\t{\n-\t\t\t\t@Override\n-\t\t\t\tpublic void writeData(final Attributes attributes)\n+\t\t\t\tif (filename != null)\n+\t\t\t\t{\n+\t\t\t\t\tresponse.setFileName(filename);\n+\t\t\t\t\tresponse.setContentDisposition(ContentDisposition.ATTACHMENT);\n+\t\t\t\t}\n+\t\t\t\telse\n \t\t\t\t{\n-\t\t\t\t\tattributes.getResponse().write(data);\n+\t\t\t\t\tresponse.setContentDisposition(ContentDisposition.INLINE);\n \t\t\t\t}\n-\t\t\t});\n \n-\t\t\tconfigureResponse(response, attributes);\n+\t\t\t\tresponse.setWriteCallback(new WriteCallback()\n+\t\t\t\t{\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic void writeData(final Attributes attributes)\n+\t\t\t\t\t{\n+\t\t\t\t\t\tattributes.getResponse().write(data);\n+\t\t\t\t\t}\n+\t\t\t\t});\n+\n+\t\t\t\tconfigureResponse(response, attributes);\n+\t\t\t}\n \t\t}\n \n \t\treturn response;\ndiff --git a/wicket-core/src/main/java/org/apache/wicket/request/resource/DynamicImageResource.java b/wicket-core/src/main/java/org/apache/wicket/request/resource/DynamicImageResource.java\nindex 472ff45..9e023d0 100644\n--- a/wicket-core/src/main/java/org/apache/wicket/request/resource/DynamicImageResource.java\n+++ b/wicket-core/src/main/java/org/apache/wicket/request/resource/DynamicImageResource.java\n@@ -167,8 +167,9 @@ public abstract class DynamicImageResource extends AbstractResource\n \t\t\t\t\t\tattributes.getResponse().write(imageData);\n \t\t\t\t\t}\n \t\t\t\t});\n+\n+\t\t\t\tconfigureResponse(response, attributes);\n \t\t\t}\n-\t\t\tconfigureResponse(response, attributes);\n \t\t}\n \n \t\treturn response;\n", "nb_test": 1275, "nb_skipped": 4, "fix_commit": "50b52742", "id": "4301"}