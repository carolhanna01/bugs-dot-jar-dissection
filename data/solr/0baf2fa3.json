{
  "project": "solr",
  "jira_id": "7717",
  "commit": "0baf2fa3",
  "classification": {
    "singleLine": false
  },
  "patch": "diff --git a/lucene/highlighter/src/java/org/apache/lucene/search/postingshighlight/MultiTermHighlighting.java b/lucene/highlighter/src/java/org/apache/lucene/search/postingshighlight/MultiTermHighlighting.java\nindex 56345c214d..c9733d3976 100644\n--- a/lucene/highlighter/src/java/org/apache/lucene/search/postingshighlight/MultiTermHighlighting.java\n+++ b/lucene/highlighter/src/java/org/apache/lucene/search/postingshighlight/MultiTermHighlighting.java\n@@ -87,16 +87,6 @@ class MultiTermHighlighting {\n       list.addAll(Arrays.asList(extractAutomata(((SpanPositionCheckQuery) query).getMatch(), field)));\n     } else if (query instanceof SpanMultiTermQueryWrapper) {\n       list.addAll(Arrays.asList(extractAutomata(((SpanMultiTermQueryWrapper<?>) query).getWrappedQuery(), field)));\n-    } else if (query instanceof AutomatonQuery) {\n-      final AutomatonQuery aq = (AutomatonQuery) query;\n-      if (aq.getField().equals(field)) {\n-        list.add(new CharacterRunAutomaton(aq.getAutomaton()) {\n-          @Override\n-          public String toString() {\n-            return aq.toString();\n-          }\n-        });\n-      }\n     } else if (query instanceof PrefixQuery) {\n       final PrefixQuery pq = (PrefixQuery) query;\n       Term prefix = pq.getPrefix();\n@@ -182,6 +172,16 @@ class MultiTermHighlighting {\n           }\n         });\n       }\n+    } else if (query instanceof AutomatonQuery) {\n+      final AutomatonQuery aq = (AutomatonQuery) query;\n+      if (aq.getField().equals(field)) {\n+        list.add(new CharacterRunAutomaton(aq.getAutomaton()) {\n+          @Override\n+          public String toString() {\n+            return aq.toString();\n+          }\n+        });\n+      }\n     }\n     return list.toArray(new CharacterRunAutomaton[list.size()]);\n   }\ndiff --git a/lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/MultiTermHighlighting.java b/lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/MultiTermHighlighting.java\nindex 267d6039d8..89403d5628 100644\n--- a/lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/MultiTermHighlighting.java\n+++ b/lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/MultiTermHighlighting.java\n@@ -100,16 +100,6 @@ class MultiTermHighlighting {\n     } else if (lookInSpan && query instanceof SpanMultiTermQueryWrapper) {\n       list.addAll(Arrays.asList(extractAutomata(((SpanMultiTermQueryWrapper<?>) query).getWrappedQuery(),\n           fieldMatcher, lookInSpan, preRewriteFunc)));\n-    } else if (query instanceof AutomatonQuery) {\n-      final AutomatonQuery aq = (AutomatonQuery) query;\n-      if (fieldMatcher.test(aq.getField())) {\n-        list.add(new CharacterRunAutomaton(aq.getAutomaton()) {\n-          @Override\n-          public String toString() {\n-            return aq.toString();\n-          }\n-        });\n-      }\n     } else if (query instanceof PrefixQuery) {\n       final PrefixQuery pq = (PrefixQuery) query;\n       Term prefix = pq.getPrefix();\n@@ -197,6 +187,16 @@ class MultiTermHighlighting {\n           }\n         });\n       }\n+    } else if (query instanceof AutomatonQuery) {\n+      final AutomatonQuery aq = (AutomatonQuery) query;\n+      if (fieldMatcher.test(aq.getField())) {\n+        list.add(new CharacterRunAutomaton(aq.getAutomaton()) {\n+          @Override\n+          public String toString() {\n+            return aq.toString();\n+          }\n+        });\n+      }\n     }\n     return list.toArray(new CharacterRunAutomaton[list.size()]);\n   }\n",
  "files": 2,
  "linesAdd": 20,
  "linesRem": 20,
  "failing_tests": [],
  "nb_test": 0,
  "nb_failure": 0,
  "nb_error": 0,
  "nb_skipped": 0
}