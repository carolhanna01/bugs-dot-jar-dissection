{
  "project": "ambari",
  "jira_id": "14801",
  "commit": "c530e009",
  "classification": {
    "singleLine": false
  },
  "patch": "diff --git a/ambari-server/src/main/java/org/apache/ambari/server/upgrade/SchemaUpgradeHelper.java b/ambari-server/src/main/java/org/apache/ambari/server/upgrade/SchemaUpgradeHelper.java\nindex a07d42d80d..89e920d69d 100644\n--- a/ambari-server/src/main/java/org/apache/ambari/server/upgrade/SchemaUpgradeHelper.java\n+++ b/ambari-server/src/main/java/org/apache/ambari/server/upgrade/SchemaUpgradeHelper.java\n@@ -182,6 +182,7 @@ public class SchemaUpgradeHelper {\n       catalogBinder.addBinding().to(UpgradeCatalog2121.class);\n       catalogBinder.addBinding().to(UpgradeCatalog220.class);\n       catalogBinder.addBinding().to(UpgradeCatalog221.class);\n+      catalogBinder.addBinding().to(UpgradeCatalog222.class);\n       catalogBinder.addBinding().to(UpgradeCatalog230.class);\n       catalogBinder.addBinding().to(UpgradeCatalog240.class);\n       catalogBinder.addBinding().to(FinalUpgradeCatalog.class);\ndiff --git a/ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog240.java b/ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog240.java\nindex 1ccea5cbda..3414388b9a 100644\n--- a/ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog240.java\n+++ b/ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog240.java\n@@ -139,21 +139,21 @@ public class UpgradeCatalog240 extends AbstractUpgradeCatalog {\n               clusterID, \"flume_agent_status\");\n \n       Map<AlertDefinitionEntity, List<String>> alertDefinitionParams = new HashMap<>();\n-      alertDefinitionParams.put(namenodeLastCheckpointAlertDefinitionEntity,\n+      checkedPutToMap(alertDefinitionParams, namenodeLastCheckpointAlertDefinitionEntity,\n               new ArrayList<String>(Arrays.asList(\"connection.timeout\", \"checkpoint.time.warning.threshold\", \"checkpoint.time.critical.threshold\")));\n-      alertDefinitionParams.put(namenodeHAHealthAlertDefinitionEntity,\n+      checkedPutToMap(alertDefinitionParams, namenodeHAHealthAlertDefinitionEntity,\n               new ArrayList<String>(Arrays.asList(\"connection.timeout\")));\n-      alertDefinitionParams.put(nodemanagerHealthAlertDefinitionEntity,\n+      checkedPutToMap(alertDefinitionParams, nodemanagerHealthAlertDefinitionEntity,\n               new ArrayList<String>(Arrays.asList(\"connection.timeout\")));\n-      alertDefinitionParams.put(nodemanagerHealthSummaryAlertDefinitionEntity,\n+      checkedPutToMap(alertDefinitionParams, nodemanagerHealthSummaryAlertDefinitionEntity,\n               new ArrayList<String>(Arrays.asList(\"connection.timeout\")));\n-      alertDefinitionParams.put(hiveMetastoreProcessAlertDefinitionEntity,\n+      checkedPutToMap(alertDefinitionParams, hiveMetastoreProcessAlertDefinitionEntity,\n               new ArrayList<String>(Arrays.asList(\"default.smoke.user\", \"default.smoke.principal\", \"default.smoke.keytab\")));\n-      alertDefinitionParams.put(hiveServerProcessAlertDefinitionEntity,\n+      checkedPutToMap(alertDefinitionParams, hiveServerProcessAlertDefinitionEntity,\n               new ArrayList<String>(Arrays.asList(\"default.smoke.user\", \"default.smoke.principal\", \"default.smoke.keytab\")));\n-      alertDefinitionParams.put(hiveWebhcatServerStatusAlertDefinitionEntity,\n+      checkedPutToMap(alertDefinitionParams, hiveWebhcatServerStatusAlertDefinitionEntity,\n               new ArrayList<String>(Arrays.asList(\"default.smoke.user\", \"connection.timeout\")));\n-      alertDefinitionParams.put(flumeAgentStatusAlertDefinitionEntity,\n+      checkedPutToMap(alertDefinitionParams, flumeAgentStatusAlertDefinitionEntity,\n               new ArrayList<String>(Arrays.asList(\"run.directory\")));\n \n       for(Map.Entry<AlertDefinitionEntity, List<String>> entry : alertDefinitionParams.entrySet()){\n@@ -169,6 +169,16 @@ public class UpgradeCatalog240 extends AbstractUpgradeCatalog {\n     }\n   }\n \n+  /*\n+  * Simple put method with check for key is not null\n+  * */\n+  private void checkedPutToMap(Map<AlertDefinitionEntity, List<String>> alertDefinitionParams, AlertDefinitionEntity alertDefinitionEntity,\n+                               List<String> params) {\n+    if (alertDefinitionEntity != null) {\n+      alertDefinitionParams.put(alertDefinitionEntity, params);\n+    }\n+  }\n+\n   protected String addParam(String source, List<String> params) {\n     JsonObject sourceJson = new JsonParser().parse(source).getAsJsonObject();\n     JsonArray parametersJson = sourceJson.getAsJsonArray(\"parameters\");\n",
  "files": 2,
  "linesAdd": 19,
  "linesRem": 8,
  "failing_tests": [],
  "nb_test": 0,
  "nb_failure": 0,
  "nb_error": 0,
  "nb_skipped": 0
}