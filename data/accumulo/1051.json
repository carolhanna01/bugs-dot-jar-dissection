{
  "files": 1, 
  "singleLine": false, 
  "nb_error": 0, 
  "failing_tests": [
    "authsTest(org.apache.accumulo.core.util.shell.ShellTest): y,z,x present in ylyu@fake> getauths(..)"
  ], 
  "nb_test": 362, 
  "patch": "diff --git a/core/src/main/java/org/apache/accumulo/core/security/Authorizations.java b/core/src/main/java/org/apache/accumulo/core/security/Authorizations.java\nindex 5933325..a677f3f 100644\n--- a/core/src/main/java/org/apache/accumulo/core/security/Authorizations.java\n+++ b/core/src/main/java/org/apache/accumulo/core/security/Authorizations.java\n@@ -23,10 +23,9 @@ import java.nio.charset.Charset;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n+import java.util.HashSet;\n import java.util.Iterator;\n import java.util.List;\n-import java.util.Set;\n-import java.util.TreeSet;\n \n import org.apache.accumulo.core.data.ArrayByteSequence;\n import org.apache.accumulo.core.data.ByteSequence;\n@@ -38,14 +37,14 @@ public class Authorizations implements Iterable<byte[]>, Serializable {\n   \n   private static final long serialVersionUID = 1L;\n   \n-  private Set<ByteSequence> auths = new TreeSet<ByteSequence>();\n+  private HashSet<ByteSequence> auths = new HashSet<ByteSequence>();\n   private List<byte[]> authsList = new ArrayList<byte[]>();\n   private List<byte[]> immutableList = Collections.unmodifiableList(authsList);\n   \n   private static final boolean[] validAuthChars = new boolean[256];\n   \n   public static final String HEADER = \"!AUTH1:\";\n-  \n+\n   static {\n     for (int i = 0; i < 256; i++) {\n       validAuthChars[i] = false;\n@@ -104,11 +103,11 @@ public class Authorizations implements Iterable<byte[]>, Serializable {\n    * @param authorizations\n    *          a serialized authorizations string produced by {@link #getAuthorizationsArray()} or {@link #serialize()}\n    */\n-  \n+\n   public Authorizations(byte[] authorizations) {\n     \n     ArgumentChecker.notNull(authorizations);\n-    \n+\n     String authsString = new String(authorizations);\n     if (authsString.startsWith(HEADER)) {\n       // its the new format\n@@ -141,7 +140,7 @@ public class Authorizations implements Iterable<byte[]>, Serializable {\n   public Authorizations(Charset charset, String... authorizations) {\n     setAuthorizations(charset, authorizations);\n   }\n-  \n+\n   public Authorizations(String... authorizations) {\n     setAuthorizations(authorizations);\n   }\n@@ -177,7 +176,6 @@ public class Authorizations implements Iterable<byte[]>, Serializable {\n     return ByteBufferUtil.toByteBuffers(immutableList);\n   }\n   \n-  @Override\n   public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String sep = \"\";\n@@ -198,7 +196,6 @@ public class Authorizations implements Iterable<byte[]>, Serializable {\n     return auths.contains(auth);\n   }\n   \n-  @Override\n   public boolean equals(Object o) {\n     if (o == null) {\n       return false;\n@@ -213,7 +210,6 @@ public class Authorizations implements Iterable<byte[]>, Serializable {\n     return false;\n   }\n   \n-  @Override\n   public int hashCode() {\n     int result = 0;\n     for (ByteSequence b : auths)\n", 
  "project": "accumulo", 
  "linesAdd": 6, 
  "nb_skipped": 0, 
  "fix_commit": "25cf3ccd", 
  "nb_failure": 1, 
  "id": "1051", 
  "linesRem": 10
}