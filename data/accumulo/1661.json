{"files": 1, "singleLine": false, "nb_error": 0, "failing_tests": ["testEmptyColumnFamily(org.apache.accumulo.core.client.mapreduce.AccumuloInputFormatTest): expected:<[(foo,bar), (,null), (,), (foo,), (,bar)]> but was:<[(foo,bar), (,), (foo,), (,bar)]>"], "nb_test": 403, "patch": "diff --git a/core/src/main/java/org/apache/accumulo/core/client/mapreduce/lib/util/InputConfigurator.java b/core/src/main/java/org/apache/accumulo/core/client/mapreduce/lib/util/InputConfigurator.java\nindex ff14107..b0e649b 100644\n--- a/core/src/main/java/org/apache/accumulo/core/client/mapreduce/lib/util/InputConfigurator.java\n+++ b/core/src/main/java/org/apache/accumulo/core/client/mapreduce/lib/util/InputConfigurator.java\n@@ -238,8 +238,15 @@ public class InputConfigurator extends ConfiguratorBase {\n    */\n   public static Set<Pair<Text,Text>> getFetchedColumns(Class<?> implementingClass, Configuration conf) {\n     ArgumentChecker.notNull(conf);\n-\n-    return deserializeFetchedColumns(conf.getStringCollection(enumToConfKey(implementingClass, ScanOpts.COLUMNS)));\n+    String confValue = conf.get(enumToConfKey(implementingClass, ScanOpts.COLUMNS));\n+    List<String> serialized = new ArrayList<String>();\n+    if (confValue != null) {\n+      // Split and include any trailing empty strings to allow empty column families\n+      for (String val : confValue.split(\",\", -1)) {\n+        serialized.add(val);\n+      }\n+    }\n+    return deserializeFetchedColumns(serialized);\n   }\n \n   public static Set<Pair<Text,Text>> deserializeFetchedColumns(Collection<String> serialized) {\n", "project": "accumulo", "linesAdd": 9, "nb_skipped": 0, "fix_commit": "13eb19c2", "nb_failure": 1, "id": "1661", "linesRem": 2}