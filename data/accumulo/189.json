{
  "files": 1, 
  "singleLine": false, 
  "nb_error": 1, 
  "failing_tests": [
    "test1(org.apache.accumulo.core.iterators.user.RegExFilterTest)"
  ], 
  "nb_test": 266, 
  "patch": "diff --git a/src/core/src/main/java/org/apache/accumulo/core/iterators/user/RegExFilter.java b/src/core/src/main/java/org/apache/accumulo/core/iterators/user/RegExFilter.java\nindex fcf77c4..0b3b73f 100644\n--- a/src/core/src/main/java/org/apache/accumulo/core/iterators/user/RegExFilter.java\n+++ b/src/core/src/main/java/org/apache/accumulo/core/iterators/user/RegExFilter.java\n@@ -39,10 +39,10 @@ public class RegExFilter extends Filter {\n   public SortedKeyValueIterator<Key,Value> deepCopy(IteratorEnvironment env) {\n     RegExFilter result = new RegExFilter();\n     result.setSource(getSource().deepCopy(env));\n-    result.rowMatcher = rowMatcher.pattern().matcher(\"\");\n-    result.colfMatcher = colfMatcher.pattern().matcher(\"\");\n-    result.colqMatcher = colqMatcher.pattern().matcher(\"\");\n-    result.valueMatcher = valueMatcher.pattern().matcher(\"\");\n+    result.rowMatcher = copyMatcher(rowMatcher);\n+    result.colfMatcher = copyMatcher(colfMatcher);\n+    result.colqMatcher = copyMatcher(colqMatcher);\n+    result.valueMatcher = copyMatcher(valueMatcher);\n     result.orFields = orFields;\n     return result;\n   }\n@@ -61,6 +61,14 @@ public class RegExFilter extends Filter {\n   \n   private ByteArrayBackedCharSequence babcs = new ByteArrayBackedCharSequence();\n   \n+  private Matcher copyMatcher(Matcher m)\n+  {\n+\t  if(m == null)\n+\t\t  return m;\n+\t  else\n+\t\t  return m.pattern().matcher(\"\");\n+  }\n+  \n   private boolean matches(Matcher matcher, ByteSequence bs) {\n     if (matcher != null) {\n       babcs.set(bs);\n", 
  "project": "accumulo", 
  "linesAdd": 12, 
  "nb_skipped": 0, 
  "fix_commit": "cd7feb4d", 
  "nb_failure": 0, 
  "id": "189", 
  "linesRem": 4
}