{"files": 1, "singleLine": false, "nb_error": 0, "failing_tests": ["ValidatorRouteTest>TestSupport.runBare:58->testConcurrentUseNotASharedSchema:155 null", "ManagedThrottlerTest>TestSupport.runBare:58->testThrottleAsyncVisableViaJmx:189 expected:<10> but was:<9>"], "nb_test": 4848, "patch": "diff --git a/camel-core/src/main/java/org/apache/camel/processor/validation/ValidatingProcessor.java b/camel-core/src/main/java/org/apache/camel/processor/validation/ValidatingProcessor.java\nindex bcbc671..2d9fa8e 100644\n--- a/camel-core/src/main/java/org/apache/camel/processor/validation/ValidatingProcessor.java\n+++ b/camel-core/src/main/java/org/apache/camel/processor/validation/ValidatingProcessor.java\n@@ -22,6 +22,7 @@ import java.io.IOException;\n import java.io.InputStream;\n import java.net.URL;\n import java.util.Collections;\n+\n import javax.xml.XMLConstants;\n import javax.xml.parsers.ParserConfigurationException;\n import javax.xml.transform.Result;\n@@ -38,6 +39,7 @@ import javax.xml.validation.Validator;\n \n import org.w3c.dom.Node;\n import org.w3c.dom.ls.LSResourceResolver;\n+\n import org.xml.sax.SAXException;\n import org.xml.sax.SAXParseException;\n \n@@ -50,10 +52,10 @@ import org.apache.camel.TypeConverter;\n import org.apache.camel.converter.jaxp.XmlConverter;\n import org.apache.camel.util.AsyncProcessorHelper;\n import org.apache.camel.util.IOHelper;\n-\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+\n /**\n  * A processor which validates the XML version of the inbound message body\n  * against some schema either in XSD or RelaxNG\n@@ -62,9 +64,9 @@ public class ValidatingProcessor implements AsyncProcessor {\n     private static final Logger LOG = LoggerFactory.getLogger(ValidatingProcessor.class);\n     private XmlConverter converter = new XmlConverter();\n     private String schemaLanguage = XMLConstants.W3C_XML_SCHEMA_NS_URI;\n-    private Schema schema;\n+    private volatile Schema schema;\n     private Source schemaSource;\n-    private SchemaFactory schemaFactory;\n+    private volatile SchemaFactory schemaFactory;\n     private URL schemaUrl;\n     private File schemaFile;\n     private byte[] schemaAsByteArray;\n@@ -190,7 +192,11 @@ public class ValidatingProcessor implements AsyncProcessor {\n \n     public Schema getSchema() throws IOException, SAXException {\n         if (schema == null) {\n-            schema = createSchema();\n+            synchronized (this) {\n+                if (schema == null) {\n+                    schema = createSchema();\n+                }\n+            }\n         }\n         return schema;\n     }\n@@ -244,7 +250,11 @@ public class ValidatingProcessor implements AsyncProcessor {\n \n     public SchemaFactory getSchemaFactory() {\n         if (schemaFactory == null) {\n-            schemaFactory = createSchemaFactory();\n+            synchronized (this) {\n+                if (schemaFactory == null) {\n+                    schemaFactory = createSchemaFactory();\n+                }\n+            }\n         }\n         return schemaFactory;\n     }\n@@ -336,21 +346,29 @@ public class ValidatingProcessor implements AsyncProcessor {\n \n         URL url = getSchemaUrl();\n         if (url != null) {\n-            return factory.newSchema(url);\n+            synchronized (this) {\n+                return factory.newSchema(url);\n+            }\n         }\n \n         File file = getSchemaFile();\n         if (file != null) {\n-            return factory.newSchema(file);\n+            synchronized (this) {\n+                return factory.newSchema(file);\n+            }\n         }\n \n         byte[] bytes = getSchemaAsByteArray();\n         if (bytes != null) {\n-            return factory.newSchema(new StreamSource(new ByteArrayInputStream(schemaAsByteArray)));\n+            synchronized (this) {\n+                return factory.newSchema(new StreamSource(new ByteArrayInputStream(schemaAsByteArray)));\n+            }\n         }\n \n         Source source = getSchemaSource();\n-        return factory.newSchema(source);\n+        synchronized (this) {\n+            return factory.newSchema(source);\n+        }\n     }\n \n     /**\n", "project": "camel", "linesAdd": 27, "nb_skipped": 3, "fix_commit": "ae419224", "nb_failure": 2, "id": "7239", "linesRem": 9}