{
  "files": 4, 
  "singleLine": false, 
  "nb_error": 0, 
  "failing_tests": [
    "ErrorHandlerBuilderRefTest>TestSupport.runBare:58->testErrorHandlerBuilderRef:55->checkObjectSize:62 Get a wrong size of ErrorHandler expected:<1> but was:<2>"
  ], 
  "nb_test": 5131, 
  "patch": "diff --git a/camel-core/src/main/java/org/apache/camel/builder/ErrorHandlerBuilder.java b/camel-core/src/main/java/org/apache/camel/builder/ErrorHandlerBuilder.java\nindex 303feb1..3c5a3f1 100644\n--- a/camel-core/src/main/java/org/apache/camel/builder/ErrorHandlerBuilder.java\n+++ b/camel-core/src/main/java/org/apache/camel/builder/ErrorHandlerBuilder.java\n@@ -90,4 +90,5 @@ public interface ErrorHandlerBuilder extends ErrorHandlerFactory {\n      * @return a clone of this {@link ErrorHandlerBuilder}\n      */\n     ErrorHandlerBuilder cloneBuilder();\n+    \n }\ndiff --git a/camel-core/src/main/java/org/apache/camel/builder/ErrorHandlerBuilderRef.java b/camel-core/src/main/java/org/apache/camel/builder/ErrorHandlerBuilderRef.java\nindex 0cf9d57..4d06b7f 100644\n--- a/camel-core/src/main/java/org/apache/camel/builder/ErrorHandlerBuilderRef.java\n+++ b/camel-core/src/main/java/org/apache/camel/builder/ErrorHandlerBuilderRef.java\n@@ -50,6 +50,18 @@ public class ErrorHandlerBuilderRef extends ErrorHandlerBuilderSupport {\n         }\n         super.addErrorHandlers(routeContext, exception);\n     }\n+    \n+    @Override\n+    public boolean removeOnExceptionList(String id) {\n+        for (RouteContext routeContext : handlers.keySet()) {\n+            if (getRouteId(routeContext).equals(id)) {\n+                handlers.remove(routeContext);\n+                break;\n+            }\n+        }\n+        return super.removeOnExceptionList(id);\n+    }\n+    \n \n     public Processor createErrorHandler(RouteContext routeContext, Processor processor) throws Exception {\n         ErrorHandlerBuilder handler = handlers.get(routeContext);\ndiff --git a/camel-core/src/main/java/org/apache/camel/builder/ErrorHandlerBuilderSupport.java b/camel-core/src/main/java/org/apache/camel/builder/ErrorHandlerBuilderSupport.java\nindex 747a6dd..365ebc0 100644\n--- a/camel-core/src/main/java/org/apache/camel/builder/ErrorHandlerBuilderSupport.java\n+++ b/camel-core/src/main/java/org/apache/camel/builder/ErrorHandlerBuilderSupport.java\n@@ -21,6 +21,7 @@ import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n \n+import org.apache.camel.CamelContext;\n import org.apache.camel.model.OnExceptionDefinition;\n import org.apache.camel.processor.ErrorHandler;\n import org.apache.camel.processor.ErrorHandlerSupport;\n@@ -94,4 +95,28 @@ public abstract class ErrorHandlerBuilderSupport implements ErrorHandlerBuilder\n         ObjectHelper.notNull(exceptionPolicyStrategy, \"ExceptionPolicyStrategy\");\n         this.exceptionPolicyStrategy = exceptionPolicyStrategy;\n     }\n+    \n+    /**\n+     * Remove the OnExceptionList by look up the route id from the ErrorHandlerBuilder internal map\n+     * @param id the route id\n+     * @return true if the route context is found and removed\n+     */\n+    public boolean removeOnExceptionList(String id) {\n+        for (RouteContext routeContext : onExceptions.keySet()) {\n+            if (getRouteId(routeContext).equals(id)) {\n+                onExceptions.remove(routeContext);\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+    \n+    protected String getRouteId(RouteContext routeContext) {\n+        CamelContext context = routeContext.getCamelContext();\n+        if (context != null) {\n+            return routeContext.getRoute().idOrCreate(context.getNodeIdFactory());\n+        } else {\n+            return routeContext.getRoute().getId();\n+        }\n+    }\n }\ndiff --git a/camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java b/camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java\nindex deba649..bd4488c 100644\n--- a/camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java\n+++ b/camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java\n@@ -71,6 +71,7 @@ import org.apache.camel.SuspendableService;\n import org.apache.camel.TypeConverter;\n import org.apache.camel.VetoCamelContextStartException;\n import org.apache.camel.builder.ErrorHandlerBuilder;\n+import org.apache.camel.builder.ErrorHandlerBuilderSupport;\n import org.apache.camel.component.properties.PropertiesComponent;\n import org.apache.camel.impl.converter.BaseTypeConverterRegistry;\n import org.apache.camel.impl.converter.DefaultTypeConverter;\n@@ -147,7 +148,6 @@ import org.apache.camel.util.TimeUtils;\n import org.apache.camel.util.URISupport;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import static org.apache.camel.util.StringQuoteHelper.doubleQuote;\n \n /**\n@@ -928,6 +928,11 @@ public class DefaultCamelContext extends ServiceSupport implements ModelCamelCon\n     }\n \n     public synchronized boolean removeRoute(String routeId) throws Exception {\n+        // remove the route from ErrorHandlerBuilder if possible\n+        if (getErrorHandlerBuilder() instanceof ErrorHandlerBuilderSupport) {\n+            ErrorHandlerBuilderSupport builder = (ErrorHandlerBuilderSupport)getErrorHandlerBuilder();\n+            builder.removeOnExceptionList(routeId);\n+        }\n         RouteService routeService = routeServices.get(routeId);\n         if (routeService != null) {\n             if (getRouteStatus(routeId).isStopped()) {\n", 
  "project": "camel", 
  "linesAdd": 44, 
  "nb_skipped": 3, 
  "fix_commit": "cac72b14", 
  "nb_failure": 1, 
  "id": "8053", 
  "linesRem": 1
}