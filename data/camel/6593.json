{"files": 2, "singleLine": false, "nb_error": 0, "failing_tests": ["DumpModelAsXmlChoiceFilterRouteTest>TestSupport.runBare:58->testDumpModelAsXmAl:44 null"], "nb_test": 4675, "patch": "diff --git a/camel-core/src/main/java/org/apache/camel/model/ExpressionNode.java b/camel-core/src/main/java/org/apache/camel/model/ExpressionNode.java\nindex 41f97ce..ef64c2d 100644\n--- a/camel-core/src/main/java/org/apache/camel/model/ExpressionNode.java\n+++ b/camel-core/src/main/java/org/apache/camel/model/ExpressionNode.java\n@@ -143,5 +143,14 @@ public class ExpressionNode extends ProcessorDefinition<ExpressionNode> {\n                 expression = clause.getExpressionType();\n             }\n         }\n+\n+        if (expression != null && expression.getExpression() == null) {\n+            // use toString from predicate or expression so we have some information to show in the route model\n+            if (expression.getPredicate() != null) {\n+                expression.setExpression(expression.getPredicate().toString());\n+            } else if (expression.getExpressionValue() != null) {\n+                expression.setExpression(expression.getExpressionValue().toString());\n+            }\n+        }\n     }\n }\ndiff --git a/camel-core/src/main/java/org/apache/camel/model/language/ExpressionDefinition.java b/camel-core/src/main/java/org/apache/camel/model/language/ExpressionDefinition.java\nindex b423afa..52b0d1c 100644\n--- a/camel-core/src/main/java/org/apache/camel/model/language/ExpressionDefinition.java\n+++ b/camel-core/src/main/java/org/apache/camel/model/language/ExpressionDefinition.java\n@@ -243,20 +243,17 @@ public class ExpressionDefinition implements Expression, Predicate {\n      * Returns some descriptive text to describe this node\n      */\n     public String getLabel() {\n-        String language = getExpression();\n-        if (ObjectHelper.isEmpty(language)) {\n-            Predicate predicate = getPredicate();\n-            if (predicate != null) {\n-                return predicate.toString();\n-            }\n-            Expression expressionValue = getExpressionValue();\n-            if (expressionValue != null) {\n-                return expressionValue.toString();\n-            }\n-        } else {\n-            return language;\n+        Predicate predicate = getPredicate();\n+        if (predicate != null) {\n+            return predicate.toString();\n         }\n-        return \"\";\n+        Expression expressionValue = getExpressionValue();\n+        if (expressionValue != null) {\n+            return expressionValue.toString();\n+        }\n+\n+        String exp = getExpression();\n+        return exp != null ? exp : \"\";\n     }\n \n     /**\n", "project": "camel", "linesAdd": 19, "nb_skipped": 1, "fix_commit": "7f8a295a", "nb_failure": 1, "id": "6593", "linesRem": 13}