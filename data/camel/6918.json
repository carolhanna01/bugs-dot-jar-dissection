{"files": 1, "singleLine": false, "nb_error": 0, "failing_tests": ["SedaErrorTest>TestSupport.runBare:58->testErrorHandle:41->ContextTestSupport.assertMockEndpointsSatisfied:343 mock://dlc Received message count. Expected: <1> but was: <0>", "VmMultipleConsumersRemoteRouteTest.testVmMultipleConsumersRemoteRoute:66 Timeout waiting for endpoints to receive enough messages. mock://route1 timed out.", "ManagedThrottlerTest>TestSupport.runBare:58->testThrottleAsyncVisableViaJmx:189 expected:<10> but was:<9>"], "nb_test": 4744, "patch": "diff --git a/camel-core/src/main/java/org/apache/camel/processor/SendProcessor.java b/camel-core/src/main/java/org/apache/camel/processor/SendProcessor.java\nindex b7d3c3c..6ba6fc8 100644\n--- a/camel-core/src/main/java/org/apache/camel/processor/SendProcessor.java\n+++ b/camel-core/src/main/java/org/apache/camel/processor/SendProcessor.java\n@@ -107,20 +107,31 @@ public class SendProcessor extends ServiceSupport implements AsyncProcessor, Tra\n \n             EventHelper.notifyExchangeSending(exchange.getContext(), target, destination);\n             LOG.debug(\">>>> {} {}\", destination, exchange);\n-            return producer.process(exchange, new AsyncCallback() {\n-                @Override\n-                public void done(boolean doneSync) {\n-                    try {\n-                        // restore previous MEP\n-                        target.setPattern(existingPattern);\n-                        // emit event that the exchange was sent to the endpoint\n-                        long timeTaken = watch.stop();\n-                        EventHelper.notifyExchangeSent(target.getContext(), target, destination, timeTaken);\n-                    } finally {\n-                        callback.done(doneSync);\n+\n+            boolean sync = true;\n+            try {\n+                sync = producer.process(exchange, new AsyncCallback() {\n+                    @Override\n+                    public void done(boolean doneSync) {\n+                        try {\n+                            // restore previous MEP\n+                            target.setPattern(existingPattern);\n+                            // emit event that the exchange was sent to the endpoint\n+                            long timeTaken = watch.stop();\n+                            EventHelper.notifyExchangeSent(target.getContext(), target, destination, timeTaken);\n+                        } finally {\n+                            callback.done(doneSync);\n+                        }\n                     }\n+                });\n+            } catch (Throwable throwable) {\n+                if (exchange != null) {\n+                    exchange.setException(throwable);\n                 }\n-            });\n+\n+            }\n+\n+            return sync;\n         }\n \n         // send the exchange to the destination using the producer cache for the non optimized producers\n", "project": "camel", "linesAdd": 23, "nb_skipped": 1, "fix_commit": "5761250c", "nb_failure": 3, "id": "6918", "linesRem": 12}