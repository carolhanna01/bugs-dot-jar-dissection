{"nb_failure": 1, "nb_error": 0, "failing_tests": ["testDLCSetHeader(org.apache.camel.processor.DeadLetterChannelUnmarshalSetHeaderTest): mock://error No header with name foo found for message: 0"], "patch": "diff --git a/camel-core/src/main/java/org/apache/camel/processor/MarshalProcessor.java b/camel-core/src/main/java/org/apache/camel/processor/MarshalProcessor.java\nindex b4e3289..9a01a55 100644\n--- a/camel-core/src/main/java/org/apache/camel/processor/MarshalProcessor.java\n+++ b/camel-core/src/main/java/org/apache/camel/processor/MarshalProcessor.java\n@@ -55,9 +55,15 @@ public class MarshalProcessor extends ServiceSupport implements Processor, Trace\n         Message out = exchange.getOut();\n         out.copyFrom(in);\n \n-        dataFormat.marshal(exchange, body, buffer);\n-        byte[] data = buffer.toByteArray();\n-        out.setBody(data);\n+        try {\n+            dataFormat.marshal(exchange, body, buffer);\n+            byte[] data = buffer.toByteArray();\n+            out.setBody(data);\n+        } catch (Exception e) {\n+            // remove OUT message, as an exception occurred\n+            exchange.setOut(null);\n+            throw e;\n+        }\n     }\n \n     @Override\ndiff --git a/camel-core/src/main/java/org/apache/camel/processor/UnmarshalProcessor.java b/camel-core/src/main/java/org/apache/camel/processor/UnmarshalProcessor.java\nindex 414b088..b8c5e5f 100644\n--- a/camel-core/src/main/java/org/apache/camel/processor/UnmarshalProcessor.java\n+++ b/camel-core/src/main/java/org/apache/camel/processor/UnmarshalProcessor.java\n@@ -27,6 +27,7 @@ import org.apache.camel.Traceable;\n import org.apache.camel.spi.DataFormat;\n import org.apache.camel.support.ServiceSupport;\n import org.apache.camel.util.ExchangeHelper;\n+import org.apache.camel.util.IOHelper;\n import org.apache.camel.util.ObjectHelper;\n import org.apache.camel.util.ServiceHelper;\n \n@@ -56,10 +57,12 @@ public class UnmarshalProcessor extends ServiceSupport implements Processor, Tra\n \n             Object result = dataFormat.unmarshal(exchange, stream);\n             out.setBody(result);\n+        } catch (Exception e) {\n+            // remove OUT message, as an exception occurred\n+            exchange.setOut(null);\n+            throw e;\n         } finally {\n-            if (stream != null) {\n-                stream.close();\n-            }\n+            IOHelper.close(stream, \"input stream\");\n         }\n     }\n \n", "nb_test": 3855, "nb_skipped": 0, "fix_commit": "8e3450f4", "id": "4509"}