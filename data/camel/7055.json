{"files": 1, "singleLine": false, "nb_error": 1, "failing_tests": ["DataFormatStreamingTest>TestSupport.runBare:58->DataFormatTest.testMarshalThenUnmarshalBean:42 \u00bb CamelExecution"], "nb_test": 4772, "patch": "diff --git a/camel-core/src/main/java/org/apache/camel/converter/stream/CachedOutputStream.java b/camel-core/src/main/java/org/apache/camel/converter/stream/CachedOutputStream.java\nindex c5f3b49..0e3540c 100644\n--- a/camel-core/src/main/java/org/apache/camel/converter/stream/CachedOutputStream.java\n+++ b/camel-core/src/main/java/org/apache/camel/converter/stream/CachedOutputStream.java\n@@ -71,31 +71,36 @@ public class CachedOutputStream extends OutputStream {\n         this(exchange, true);\n     }\n \n-    public CachedOutputStream(Exchange exchange, boolean closedOnCompletion) {\n+    public CachedOutputStream(Exchange exchange, final boolean closedOnCompletion) {\n         this.strategy = exchange.getContext().getStreamCachingStrategy();\n         currentStream = new CachedByteArrayOutputStream(strategy.getBufferSize());\n         \n-        if (closedOnCompletion) {\n-            // add on completion so we can cleanup after the exchange is done such as deleting temporary files\n-            exchange.addOnCompletion(new SynchronizationAdapter() {\n-                @Override\n-                public void onDone(Exchange exchange) {\n-                    try {\n-                        if (fileInputStreamCache != null) {\n-                            fileInputStreamCache.close();\n-                        }\n+        // add on completion so we can cleanup after the exchange is done such as deleting temporary files\n+        exchange.addOnCompletion(new SynchronizationAdapter() {\n+            @Override\n+            public void onDone(Exchange exchange) {\n+                try {\n+                    if (fileInputStreamCache != null) {\n+                        fileInputStreamCache.close();\n+                    }\n+                    if (closedOnCompletion) {\n                         close();\n-                    } catch (Exception e) {\n-                        LOG.warn(\"Error deleting temporary cache file: \" + tempFile, e);\n                     }\n+                } catch (Exception e) {\n+                    LOG.warn(\"Error closing streams. This exception will be ignored.\", e);\n                 }\n-    \n-                @Override\n-                public String toString() {\n-                    return \"OnCompletion[CachedOutputStream]\";\n+                try {\n+                    cleanUpTempFile();\n+                } catch (Exception e) {\n+                    LOG.warn(\"Error deleting temporary cache file: \" + tempFile + \". This exception will be ignored.\", e);\n                 }\n-            });\n-        }\n+            }\n+    \n+            @Override\n+            public String toString() {\n+                return \"OnCompletion[CachedOutputStream]\";\n+            }\n+        });\n     }\n \n     public void flush() throws IOException {\n@@ -104,7 +109,6 @@ public class CachedOutputStream extends OutputStream {\n \n     public void close() throws IOException {\n         currentStream.close();\n-        cleanUpTempFile();\n     }\n \n     public boolean equals(Object obj) {\n", "project": "camel", "linesAdd": 23, "nb_skipped": 1, "fix_commit": "15e1077d", "nb_failure": 0, "id": "7055", "linesRem": 19}