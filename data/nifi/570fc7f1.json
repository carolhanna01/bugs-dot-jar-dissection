{
  "project": "nifi",
  "jira_id": "10919",
  "commit": "570fc7f1",
  "classification": {
    "singleLine": false
  },
  "patch": "diff --git a/nifi-nar-bundles/nifi-kafka-bundle/nifi-kafka-shared/src/main/java/org/apache/nifi/kafka/shared/login/DelegatingLoginConfigProvider.java b/nifi-nar-bundles/nifi-kafka-bundle/nifi-kafka-shared/src/main/java/org/apache/nifi/kafka/shared/login/DelegatingLoginConfigProvider.java\nindex c9b81bc595..2be8274606 100644\n--- a/nifi-nar-bundles/nifi-kafka-bundle/nifi-kafka-shared/src/main/java/org/apache/nifi/kafka/shared/login/DelegatingLoginConfigProvider.java\n+++ b/nifi-nar-bundles/nifi-kafka-bundle/nifi-kafka-shared/src/main/java/org/apache/nifi/kafka/shared/login/DelegatingLoginConfigProvider.java\n@@ -47,7 +47,7 @@ public class DelegatingLoginConfigProvider implements LoginConfigProvider {\n     @Override\n     public String getConfiguration(final PropertyContext context) {\n         final String saslMechanismProperty = context.getProperty(KafkaClientComponent.SASL_MECHANISM).getValue();\n-        final SaslMechanism saslMechanism = SaslMechanism.valueOf(saslMechanismProperty);\n+        final SaslMechanism saslMechanism = SaslMechanism.getSaslMechanism(saslMechanismProperty);\n         final LoginConfigProvider loginConfigProvider = PROVIDERS.getOrDefault(saslMechanism, SCRAM_PROVIDER);\n         return loginConfigProvider.getConfiguration(context);\n     }\ndiff --git a/nifi-nar-bundles/nifi-kafka-bundle/nifi-kafka-shared/src/main/java/org/apache/nifi/kafka/shared/property/SaslMechanism.java b/nifi-nar-bundles/nifi-kafka-bundle/nifi-kafka-shared/src/main/java/org/apache/nifi/kafka/shared/property/SaslMechanism.java\nindex 619daeb86a..a9da7714e3 100644\n--- a/nifi-nar-bundles/nifi-kafka-bundle/nifi-kafka-shared/src/main/java/org/apache/nifi/kafka/shared/property/SaslMechanism.java\n+++ b/nifi-nar-bundles/nifi-kafka-bundle/nifi-kafka-shared/src/main/java/org/apache/nifi/kafka/shared/property/SaslMechanism.java\n@@ -18,6 +18,9 @@ package org.apache.nifi.kafka.shared.property;\n \n import org.apache.nifi.components.DescribedValue;\n \n+import java.util.Arrays;\n+import java.util.Optional;\n+\n /**\n  * Enumeration of supported Kafka SASL Mechanisms\n  */\n@@ -42,6 +45,13 @@ public enum SaslMechanism implements DescribedValue {\n         this.description = description;\n     }\n \n+    public static SaslMechanism getSaslMechanism(final String value) {\n+        final Optional<SaslMechanism> foundSaslMechanism = Arrays.stream(SaslMechanism.values())\n+                .filter(saslMechanism -> saslMechanism.getValue().equals(value))\n+                .findFirst();\n+        return foundSaslMechanism.orElseThrow(() -> new IllegalArgumentException(String.format(\"SaslMechanism value [%s] not found\", value)));\n+    }\n+\n     @Override\n     public String getValue() {\n         return value;\ndiff --git a/nifi-nar-bundles/nifi-kafka-bundle/nifi-kafka-shared/src/main/java/org/apache/nifi/kafka/shared/property/provider/StandardKafkaPropertyNameProvider.java b/nifi-nar-bundles/nifi-kafka-bundle/nifi-kafka-shared/src/main/java/org/apache/nifi/kafka/shared/property/provider/StandardKafkaPropertyNameProvider.java\nindex 10979716a4..2083bfc7e7 100644\n--- a/nifi-nar-bundles/nifi-kafka-bundle/nifi-kafka-shared/src/main/java/org/apache/nifi/kafka/shared/property/provider/StandardKafkaPropertyNameProvider.java\n+++ b/nifi-nar-bundles/nifi-kafka-bundle/nifi-kafka-shared/src/main/java/org/apache/nifi/kafka/shared/property/provider/StandardKafkaPropertyNameProvider.java\n@@ -19,6 +19,7 @@ package org.apache.nifi.kafka.shared.property.provider;\n import java.lang.reflect.Field;\n import java.lang.reflect.Modifier;\n import java.util.LinkedHashSet;\n+import java.util.Optional;\n import java.util.Set;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n@@ -58,10 +59,13 @@ public class StandardKafkaPropertyNameProvider implements KafkaPropertyNameProvi\n         final Set<String> propertyNames = new LinkedHashSet<>();\n \n         for (final String propertyClassName : PROPERTY_CLASSES) {\n-            final Class<?> propertyClass = getClass(propertyClassName);\n+            final Optional<Class<?>> propertyClassFound = findClass(propertyClassName);\n+            if (propertyClassFound.isPresent()) {\n+                final Class<?> propertyClass = propertyClassFound.get();\n                 final Set<String> classPropertyNames = getStaticStringPropertyNames(propertyClass);\n                 propertyNames.addAll(classPropertyNames);\n             }\n+        }\n \n         return propertyNames;\n     }\n@@ -93,11 +97,11 @@ public class StandardKafkaPropertyNameProvider implements KafkaPropertyNameProvi\n         }\n     }\n \n-    private static Class<?> getClass(final String className) {\n+    private static Optional<Class<?>> findClass(final String className) {\n         try {\n-            return Class.forName(className);\n+            return Optional.of(Class.forName(className));\n         } catch (final ClassNotFoundException e) {\n-            throw new IllegalStateException(\"Kafka Configuration Class not found\", e);\n+            return Optional.empty();\n         }\n     }\n }\ndiff --git a/nifi-nar-bundles/nifi-kafka-bundle/nifi-kafka-shared/src/main/java/org/apache/nifi/kafka/shared/property/provider/StandardKafkaPropertyProvider.java b/nifi-nar-bundles/nifi-kafka-bundle/nifi-kafka-shared/src/main/java/org/apache/nifi/kafka/shared/property/provider/StandardKafkaPropertyProvider.java\nindex a9ae4d6320..fd06acb6d0 100644\n--- a/nifi-nar-bundles/nifi-kafka-bundle/nifi-kafka-shared/src/main/java/org/apache/nifi/kafka/shared/property/provider/StandardKafkaPropertyProvider.java\n+++ b/nifi-nar-bundles/nifi-kafka-bundle/nifi-kafka-shared/src/main/java/org/apache/nifi/kafka/shared/property/provider/StandardKafkaPropertyProvider.java\n@@ -83,7 +83,7 @@ public class StandardKafkaPropertyProvider implements KafkaPropertyProvider {\n             final String loginConfig = LOGIN_CONFIG_PROVIDER.getConfiguration(context);\n             properties.put(SASL_JAAS_CONFIG.getProperty(), loginConfig);\n \n-            final SaslMechanism saslMechanism = SaslMechanism.valueOf(context.getProperty(SASL_MECHANISM).getValue());\n+            final SaslMechanism saslMechanism = SaslMechanism.getSaslMechanism(context.getProperty(SASL_MECHANISM).getValue());\n             if (SaslMechanism.GSSAPI == saslMechanism && isCustomKerberosLoginFound()) {\n                 properties.put(SASL_LOGIN_CLASS.getProperty(), SASL_GSSAPI_CUSTOM_LOGIN_CLASS);\n             }\n",
  "files": 4,
  "linesAdd": 20,
  "linesRem": 6,
  "failing_tests": [],
  "nb_test": 14,
  "nb_failure": 0,
  "nb_error": 3,
  "nb_skipped": 0
}