{
  "project": "jackrabbit",
  "jira_id": "3950",
  "commit": "25dc4c9c",
  "classification": {
    "singleLine": false
  },
  "patch": "diff --git a/jackrabbit-jcr-commons/src/main/java/org/apache/jackrabbit/util/Text.java b/jackrabbit-jcr-commons/src/main/java/org/apache/jackrabbit/util/Text.java\nindex 31f4268f1..109a73536 100644\n--- a/jackrabbit-jcr-commons/src/main/java/org/apache/jackrabbit/util/Text.java\n+++ b/jackrabbit-jcr-commons/src/main/java/org/apache/jackrabbit/util/Text.java\n@@ -209,13 +209,28 @@ public class Text {\n     }\n \n     /**\n-     * Replaces illegal XML characters in the given string by their corresponding\n-     * predefined entity references.\n+     * Replaces XML characters in the given string that might need escaping\n+     * as XML text or attribute\n      *\n      * @param text text to be escaped\n      * @return a string\n      */\n     public static String encodeIllegalXMLCharacters(String text) {\n+        return encodeMarkupCharacters(text, false);\n+    }\n+\n+    /**\n+     * Replaces HTML characters in the given string that might need escaping\n+     * as HTML text or attribute\n+     *\n+     * @param text text to be escaped\n+     * @return a string\n+     */\n+    public static String encodeIllegalHTMLCharacters(String text) {\n+        return encodeMarkupCharacters(text, true);\n+    }\n+\n+    private static String encodeMarkupCharacters(String text, boolean isHtml) {\n         if (text == null) {\n             throw new IllegalArgumentException(\"null argument\");\n         }\n@@ -250,7 +265,7 @@ public class Text {\n             } else if (ch == '\"') {\n                 buf.append(\"&quot;\");\n             } else if (ch == '\\'') {\n-                buf.append(\"&apos;\");\n+                buf.append(isHtml ? \"&#39;\" : \"&apos;\");\n             }\n         }\n         if (buf == null) {\ndiff --git a/jackrabbit-jcr-server/src/main/java/org/apache/jackrabbit/server/io/DirListingExportHandler.java b/jackrabbit-jcr-server/src/main/java/org/apache/jackrabbit/server/io/DirListingExportHandler.java\nindex dc3516b21..73fdfbe0f 100644\n--- a/jackrabbit-jcr-server/src/main/java/org/apache/jackrabbit/server/io/DirListingExportHandler.java\n+++ b/jackrabbit-jcr-server/src/main/java/org/apache/jackrabbit/server/io/DirListingExportHandler.java\n@@ -146,14 +146,14 @@ public class DirListingExportHandler implements IOHandler, PropertyHandler {\n                 String repURL = rep.getDescriptor(Repository.REP_VENDOR_URL_DESC);\n                 String repVersion = rep.getDescriptor(Repository.REP_VERSION_DESC);\n                 writer.print(\"<html><head><title>\");\n-                writer.print(repName);\n+                writer.print(Text.encodeIllegalHTMLCharacters(repName));\n                 writer.print(\" \");\n-                writer.print(repVersion);\n+                writer.print(Text.encodeIllegalHTMLCharacters(repVersion));\n                 writer.print(\" \");\n-                writer.print(item.getPath());\n+                writer.print(Text.encodeIllegalHTMLCharacters(item.getPath()));\n                 writer.print(\"</title></head>\");\n                 writer.print(\"<body><h2>\");\n-                writer.print(item.getPath());\n+                writer.print(Text.encodeIllegalHTMLCharacters(item.getPath()));\n                 writer.print(\"</h2><ul>\");\n                 writer.print(\"<li><a href=\\\"..\\\">..</a></li>\");\n                 if (item.isNode()) {\n@@ -162,21 +162,21 @@ public class DirListingExportHandler implements IOHandler, PropertyHandler {\n                         Node child = iter.nextNode();\n                         String label = Text.getName(child.getPath());\n                         writer.print(\"<li><a href=\\\"\");\n-                        writer.print(Text.escape(label));\n+                        writer.print(Text.encodeIllegalHTMLCharacters(Text.escape(label)));\n                         if (child.isNode()) {\n                             writer.print(\"/\");\n                         }\n                         writer.print(\"\\\">\");\n-                        writer.print(Text.encodeIllegalXMLCharacters(label));\n+                        writer.print(Text.encodeIllegalHTMLCharacters(label));\n                         writer.print(\"</a></li>\");\n                     }\n                 }\n                 writer.print(\"</ul><hr size=\\\"1\\\"><em>Powered by <a href=\\\"\");\n-                writer.print(repURL);\n+                writer.print(Text.encodeIllegalHTMLCharacters(repURL));\n                 writer.print(\"\\\">\");\n-                writer.print(repName);\n+                writer.print(Text.encodeIllegalHTMLCharacters(repName));\n                 writer.print(\"</a> version \");\n-                writer.print(repVersion);\n+                writer.print(Text.encodeIllegalHTMLCharacters(repVersion));\n                 writer.print(\"</em></body></html>\");\n             } catch (RepositoryException e) {\n                 // should not occur\n@@ -210,14 +210,14 @@ public class DirListingExportHandler implements IOHandler, PropertyHandler {\n                 String repURL = rep.getDescriptor(Repository.REP_VENDOR_URL_DESC);\n                 String repVersion = rep.getDescriptor(Repository.REP_VERSION_DESC);\n                 writer.print(\"<html><head><title>\");\n-                writer.print(repName);\n+                writer.print(Text.encodeIllegalHTMLCharacters(repName));\n                 writer.print(\" \");\n-                writer.print(repVersion);\n+                writer.print(Text.encodeIllegalHTMLCharacters(repVersion));\n                 writer.print(\" \");\n-                writer.print(resource.getResourcePath());\n+                writer.print(Text.encodeIllegalHTMLCharacters(resource.getResourcePath()));\n                 writer.print(\"</title></head>\");\n                 writer.print(\"<body><h2>\");\n-                writer.print(resource.getResourcePath());\n+                writer.print(Text.encodeIllegalHTMLCharacters(resource.getResourcePath()));\n                 writer.print(\"</h2><ul>\");\n                 writer.print(\"<li><a href=\\\"..\\\">..</a></li>\");\n                 DavResourceIterator iter = resource.getMembers();\n@@ -225,17 +225,17 @@ public class DirListingExportHandler implements IOHandler, PropertyHandler {\n                     DavResource child = iter.nextResource();\n                     String label = Text.getName(child.getResourcePath());\n                     writer.print(\"<li><a href=\\\"\");\n-                    writer.print(child.getHref());\n+                    writer.print(Text.encodeIllegalHTMLCharacters(child.getHref()));\n                     writer.print(\"\\\">\");\n-                    writer.print(Text.encodeIllegalXMLCharacters(label));\n+                    writer.print(Text.encodeIllegalHTMLCharacters(label));\n                     writer.print(\"</a></li>\");\n                 }\n                 writer.print(\"</ul><hr size=\\\"1\\\"><em>Powered by <a href=\\\"\");\n-                writer.print(repURL);\n+                writer.print(Text.encodeIllegalHTMLCharacters(repURL));\n                 writer.print(\"\\\">\");\n-                writer.print(repName);\n+                writer.print(Text.encodeIllegalHTMLCharacters(repName));\n                 writer.print(\"</a> version \");\n-                writer.print(repVersion);\n+                writer.print(Text.encodeIllegalHTMLCharacters(repVersion));\n                 writer.print(\"</em></body></html>\");\n             } catch (RepositoryException e) {\n                 // should not occur\n",
  "files": 2,
  "linesAdd": 36,
  "linesRem": 21,
  "failing_tests": [],
  "nb_test": 0,
  "nb_failure": 0,
  "nb_error": 0,
  "nb_skipped": 0
}