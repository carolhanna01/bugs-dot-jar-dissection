{"nb_failure": 0, "nb_error": 4, "failing_tests": ["getNodeSNS[0](org.apache.jackrabbit.oak.jcr.RepositoryTest): bar[2]", "getNodeSNS[3](org.apache.jackrabbit.oak.jcr.RepositoryTest): bar[2]", "getNodeSNS[2](org.apache.jackrabbit.oak.jcr.RepositoryTest): bar[2]", "getNodeSNS[1](org.apache.jackrabbit.oak.jcr.RepositoryTest): bar[2]"], "patch": "diff --git a/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/session/NodeImpl.java b/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/session/NodeImpl.java\nindex 2dbd284..21a32d0 100644\n--- a/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/session/NodeImpl.java\n+++ b/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/session/NodeImpl.java\n@@ -797,24 +797,32 @@ public class NodeImpl<T extends NodeDelegate> extends ItemImpl<T> implements Nod\n \n     @Override\n     public boolean hasNode(String relPath) throws RepositoryException {\n-        final String oakPath = getOakPathOrThrow(relPath);\n-        return perform(new NodeOperation<Boolean>(dlg) {\n-            @Override\n-            public Boolean perform() throws RepositoryException {\n-                return node.getChild(oakPath) != null;\n-            }\n-        });\n+        try {\n+            final String oakPath = getOakPathOrThrow(relPath);\n+            return perform(new NodeOperation<Boolean>(dlg) {\n+                @Override\n+                public Boolean perform() throws RepositoryException {\n+                    return node.getChild(oakPath) != null;\n+                }\n+            });\n+        } catch (PathNotFoundException e) {\n+            return false;\n+        }\n     }\n \n     @Override\n     public boolean hasProperty(String relPath) throws RepositoryException {\n-        final String oakPath = getOakPathOrThrow(relPath);\n-        return perform(new NodeOperation<Boolean>(dlg) {\n-            @Override\n-            public Boolean perform() throws RepositoryException {\n-                return node.getPropertyOrNull(oakPath) != null;\n-            }\n-        });\n+        try {\n+            final String oakPath = getOakPathOrThrow(relPath);\n+            return perform(new NodeOperation<Boolean>(dlg) {\n+                @Override\n+                public Boolean perform() throws RepositoryException {\n+                    return node.getPropertyOrNull(oakPath) != null;\n+                }\n+            });\n+        } catch (PathNotFoundException e) {\n+            return false;\n+        }\n     }\n \n     @Override\n", "nb_test": 1963, "nb_skipped": 5, "fix_commit": "117b0a3d", "id": "1227"}