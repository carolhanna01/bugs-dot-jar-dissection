{"files": 2, "singleLine": false, "nb_error": 0, "failing_tests": ["testReindexAsync(org.apache.jackrabbit.oak.plugins.index.IndexUpdateTest)"], "nb_test": 1936, "patch": "diff --git a/oak-core/src/main/java/org/apache/jackrabbit/oak/Oak.java b/oak-core/src/main/java/org/apache/jackrabbit/oak/Oak.java\nindex 04020c1..9399ae9 100644\n--- a/oak-core/src/main/java/org/apache/jackrabbit/oak/Oak.java\n+++ b/oak-core/src/main/java/org/apache/jackrabbit/oak/Oak.java\n@@ -49,6 +49,7 @@ import com.google.common.base.Function;\n import com.google.common.collect.Iterables;\n import com.google.common.collect.Lists;\n import com.google.common.io.Closer;\n+\n import org.apache.jackrabbit.oak.api.ContentRepository;\n import org.apache.jackrabbit.oak.api.ContentSession;\n import org.apache.jackrabbit.oak.api.Root;\n@@ -60,6 +61,7 @@ import org.apache.jackrabbit.oak.management.RepositoryManager;\n import org.apache.jackrabbit.oak.plugins.commit.ConflictHook;\n import org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate;\n import org.apache.jackrabbit.oak.plugins.index.CompositeIndexEditorProvider;\n+import org.apache.jackrabbit.oak.plugins.index.IndexConstants;\n import org.apache.jackrabbit.oak.plugins.index.IndexEditorProvider;\n import org.apache.jackrabbit.oak.plugins.index.IndexUpdateProvider;\n import org.apache.jackrabbit.oak.plugins.index.property.jmx.PropertyIndexAsyncReindex;\n@@ -528,11 +530,11 @@ public class Oak {\n                     task.getIndexStats(), IndexStatsMBean.TYPE, name));\n \n             PropertyIndexAsyncReindex asyncPI = new PropertyIndexAsyncReindex(\n-                    new AsyncIndexUpdate(\"async-reindex\", store, indexEditors,\n-                            true), getExecutor()\n-            );\n-            regs.add(registerMBean(whiteboard, PropertyIndexAsyncReindexMBean.class,\n-                    asyncPI, PropertyIndexAsyncReindexMBean.TYPE, name));\n+                    new AsyncIndexUpdate(IndexConstants.ASYNC_REINDEX_VALUE,\n+                            store, indexEditors, true), getExecutor());\n+            regs.add(registerMBean(whiteboard,\n+                    PropertyIndexAsyncReindexMBean.class, asyncPI,\n+                    PropertyIndexAsyncReindexMBean.TYPE, name));\n         }\n \n         regs.add(registerMBean(whiteboard, QueryEngineSettingsMBean.class,\ndiff --git a/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexUpdate.java b/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexUpdate.java\nindex c8879d0..ea8dd80 100644\n--- a/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexUpdate.java\n+++ b/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexUpdate.java\n@@ -357,29 +357,30 @@ public class AsyncIndexUpdate implements Runnable {\n                 } else {\n                     postAsyncRunStatsStatus(indexStats);\n                 }\n-            } else if (switchOnSync) {\n-                log.debug(\"No changes detected after diff; will try to\"\n-                        + \" switch to synchronous updates on {}\",\n-                        reindexedDefinitions);\n-\n-                // no changes after diff, switch to sync on the async defs\n-                for (String path : reindexedDefinitions) {\n-                    NodeBuilder c = builder;\n-                    for (String p : elements(path)) {\n-                        c = c.getChildNode(p);\n-                    }\n-                    if (c.exists() && !c.getBoolean(REINDEX_PROPERTY_NAME)) {\n-                        c.removeProperty(ASYNC_PROPERTY_NAME);\n+            } else {\n+                if (switchOnSync) {\n+                    log.debug(\n+                            \"No changes detected after diff; will try to switch to synchronous updates on {}\",\n+                            reindexedDefinitions);\n+\n+                    // no changes after diff, switch to sync on the async defs\n+                    for (String path : reindexedDefinitions) {\n+                        NodeBuilder c = builder;\n+                        for (String p : elements(path)) {\n+                            c = c.getChildNode(p);\n+                        }\n+                        if (c.exists() && !c.getBoolean(REINDEX_PROPERTY_NAME)) {\n+                            c.removeProperty(ASYNC_PROPERTY_NAME);\n+                        }\n                     }\n+                    reindexedDefinitions.clear();\n                 }\n-                reindexedDefinitions.clear();\n+                postAsyncRunStatsStatus(indexStats);\n             }\n             mergeWithConcurrencyCheck(builder, beforeCheckpoint, callback.lease);\n         } finally {\n             callback.close();\n         }\n-\n-        postAsyncRunStatsStatus(indexStats);\n     }\n \n     private void mergeWithConcurrencyCheck(\n", "project": "jackrabbit-oak", "linesAdd": 24, "nb_skipped": 9, "fix_commit": "5931a4a7", "nb_failure": 1, "id": "2174", "linesRem": 21}