{"files": 1, "singleLine": false, "nb_error": 0, "failing_tests": ["purgeAllButMostRecentCommitRoot(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest): merge must fail with CommitFailedException"], "nb_test": 2425, "patch": "diff --git a/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/SplitOperations.java b/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/SplitOperations.java\nindex 33aafe5..a426521 100644\n--- a/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/SplitOperations.java\n+++ b/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/SplitOperations.java\n@@ -233,6 +233,7 @@ class SplitOperations {\n         committedChanges.put(REVISIONS, revisions);\n         NavigableMap<Revision, String> commitRoot =\n                 new TreeMap<Revision, String>(context.getRevisionComparator());\n+        boolean mostRecent = true;\n         for (Map.Entry<Revision, String> entry : doc.getLocalCommitRoot().entrySet()) {\n             Revision r = entry.getKey();\n             if (splitRevs.contains(r)) {\n@@ -240,9 +241,13 @@ class SplitOperations {\n                 numValues++;\n             } else if (r.getClusterId() == context.getClusterId() \n                     && !changes.contains(r)) {\n-                // OAK-2528: _commitRoot entry without associated\n-                // change -> consider as garbage\n-                addGarbage(r, COMMIT_ROOT);\n+                // OAK-2528: _commitRoot entry without associated change\n+                // consider all but most recent as garbage (OAK-3333)\n+                if (mostRecent) {\n+                    mostRecent = false;\n+                } else {\n+                    addGarbage(r, COMMIT_ROOT);\n+                }\n             }\n         }\n         committedChanges.put(COMMIT_ROOT, commitRoot);\n", "project": "jackrabbit-oak", "linesAdd": 8, "nb_skipped": 1, "fix_commit": "194999ed", "nb_failure": 1, "id": "3333", "linesRem": 3}