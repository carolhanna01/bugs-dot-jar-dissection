{"nb_failure": 0, "nb_error": 1, "failing_tests": ["fulltextQueryWithSpecialChars(org.apache.jackrabbit.oak.plugins.index.lucene.LucenePropertyIndexTest): INVALID_SYNTAX_CANNOT_PARSE: Syntax Error, cannot parse foo!:"], "patch": "diff --git a/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndex.java b/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndex.java\nindex cd4d2c3..fb69de7 100644\n--- a/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndex.java\n+++ b/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndex.java\n@@ -39,6 +39,7 @@ import com.google.common.collect.AbstractIterator;\n import com.google.common.collect.Lists;\n import com.google.common.collect.Queues;\n import com.google.common.collect.Sets;\n+import com.google.common.primitives.Chars;\n import org.apache.jackrabbit.oak.api.PropertyValue;\n import org.apache.jackrabbit.oak.api.Result.SizePrecision;\n import org.apache.jackrabbit.oak.api.Type;\n@@ -1337,6 +1338,11 @@ public class LucenePropertyIndex implements AdvancedQueryIndex, QueryIndex, Nati\n     }\n \n     /**\n+     * Following chars are used as operators in Lucene Query and should be escaped\n+     */\n+    private static final char[] LUCENE_QUERY_OPERATORS = {':' , '/', '!', '&', '|', '[', ']', '{', '}'};\n+\n+    /**\n      * Following logic is taken from org.apache.jackrabbit.core.query.lucene.JackrabbitQueryParser#parse(java.lang.String)\n      */\n     static String rewriteQueryText(String textsearch) {\n@@ -1361,10 +1367,7 @@ public class LucenePropertyIndex implements AdvancedQueryIndex, QueryIndex, Nati\n                     escaped = false;\n                 }\n                 rewritten.append(c);\n-            } else if (c == ':' || c == '/') {\n-                //TODO Some other chars are also considered special See OAK-3769 for details\n-                //':' fields as known in lucene are not supported\n-                //'/' its a special char used for regex search in Lucene\n+            } else if (Chars.contains(LUCENE_QUERY_OPERATORS, c)) {\n                 rewritten.append('\\\\').append(c);\n             } else {\n                 if (escaped) {\n", "nb_test": 326, "nb_skipped": 3, "fix_commit": "4faf31e3", "id": "3879"}