{"nb_failure": 1, "nb_error": 0, "failing_tests": ["versionablePathHook(org.apache.jackrabbit.oak.plugins.document.VisibleChangesTest): Must not query for hidden paths: [2:/:hidden/] expected:<0> but was:<1>"], "patch": "diff --git a/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/version/VersionablePathHook.java b/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/version/VersionablePathHook.java\nindex 9369dde..132296a 100644\n--- a/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/version/VersionablePathHook.java\n+++ b/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/version/VersionablePathHook.java\n@@ -37,6 +37,7 @@ import org.apache.jackrabbit.oak.spi.commit.CommitInfo;\n import org.apache.jackrabbit.oak.spi.state.DefaultNodeStateDiff;\n import org.apache.jackrabbit.oak.spi.state.NodeBuilder;\n import org.apache.jackrabbit.oak.spi.state.NodeState;\n+import org.apache.jackrabbit.oak.spi.state.NodeStateUtils;\n \n import static org.apache.jackrabbit.oak.plugins.memory.EmptyNodeState.EMPTY_NODE;\n \n@@ -108,6 +109,10 @@ public class VersionablePathHook implements CommitHook {\n         @Override\n         public boolean childNodeChanged(\n                 String name, NodeState before, NodeState after) {\n+            if (NodeStateUtils.isHidden(name)) {\n+                // stop comparison\n+                return false;\n+            }\n             Node node = new Node(nodeAfter, name);\n             return after.compareAgainstBaseState(\n                     before, new Diff(versionManager, node, exceptions));\n@@ -117,7 +122,8 @@ public class VersionablePathHook implements CommitHook {\n             if (JcrConstants.JCR_VERSIONHISTORY.equals(after.getName()) && nodeAfter.isVersionable(versionManager)) {\n                 NodeBuilder vhBuilder;\n                 try {\n-                    vhBuilder = versionManager.getOrCreateVersionHistory(nodeAfter.builder, Collections.EMPTY_MAP);\n+                    vhBuilder = versionManager.getOrCreateVersionHistory(\n+                            nodeAfter.builder, Collections.<String, Object>emptyMap());\n                 } catch (CommitFailedException e) {\n                     exceptions.add(e);\n                     // stop further comparison\n", "nb_test": 2166, "nb_skipped": 9, "fix_commit": "5135cf4b", "id": "3019"}