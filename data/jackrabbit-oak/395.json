{"nb_failure": 2, "nb_error": 0, "failing_tests": ["testRemoveMissingProperty(org.apache.jackrabbit.oak.jcr.CRUDTest): removing a missing property should fail", "testRemoveBySetProperty(org.apache.jackrabbit.oak.jcr.CRUDTest)"], "patch": "diff --git a/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/NodeImpl.java b/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/NodeImpl.java\nindex c3ff7d6..c1114a7 100644\n--- a/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/NodeImpl.java\n+++ b/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/NodeImpl.java\n@@ -302,19 +302,20 @@ public class NodeImpl extends ItemImpl<NodeDelegate> implements Node {\n      * @see Node#setProperty(String, javax.jcr.Value, int)\n      */\n     @Override\n-    @CheckForNull\n+    @Nonnull\n     public Property setProperty(final String jcrName, final Value value, final int type)\n             throws RepositoryException {\n         checkStatus();\n \n-        return sessionDelegate.perform(new SessionOperation<PropertyImpl>() {\n+        return sessionDelegate.perform(new SessionOperation<Property>() {\n             @Override\n-            public PropertyImpl perform() throws RepositoryException {\n-                String oakName = sessionDelegate.getOakPathOrThrow(jcrName);\n+            public Property perform() throws RepositoryException {\n                 if (value == null) {\n-                    dlg.removeProperty(oakName);\n-                    return null;\n+                    Property property = getProperty(jcrName);\n+                    property.remove();\n+                    return property;\n                 } else {\n+                    String oakName = sessionDelegate.getOakPathOrThrow(jcrName);\n                     int targetType = getTargetType(value, type);\n                     Value targetValue =\n                             ValueHelper.convert(value, targetType, getValueFactory());\n", "nb_test": 331, "nb_skipped": 4, "fix_commit": "4ed7bc8e", "id": "395"}