{"nb_failure": 1, "nb_error": 0, "failing_tests": ["testEncode(org.apache.jackrabbit.oak.kernel.TypeCodesTest): expected:<[:blobId]:> but was:<[bin]:>"], "patch": "diff --git a/oak-core/src/main/java/org/apache/jackrabbit/oak/kernel/TypeCodes.java b/oak-core/src/main/java/org/apache/jackrabbit/oak/kernel/TypeCodes.java\nindex 48142ab..dd0580a 100644\n--- a/oak-core/src/main/java/org/apache/jackrabbit/oak/kernel/TypeCodes.java\n+++ b/oak-core/src/main/java/org/apache/jackrabbit/oak/kernel/TypeCodes.java\n@@ -34,7 +34,9 @@ public class TypeCodes {\n \n     static {\n         for (int type = PropertyType.UNDEFINED; type <= PropertyType.DECIMAL; type++) {\n-            String code = PropertyType.nameFromValue(type).substring(0, 3).toLowerCase(Locale.ENGLISH);\n+            String code = type == PropertyType.BINARY\n+                    ? \":blobId\"  // See class comment for MicroKernel and OAK-428\n+                    : PropertyType.nameFromValue(type).substring(0, 3).toLowerCase(Locale.ENGLISH);\n             TYPE2CODE.put(type, code);\n             CODE2TYPE.put(code, type);\n         }\n@@ -61,7 +63,10 @@ public class TypeCodes {\n      * @return  the location where the prefix ends or -1 if no prefix is present\n      */\n     public static int split(String jsonString) {\n-        if (jsonString.length() >= 4 && jsonString.charAt(3) == ':') {\n+        if (jsonString.startsWith(\":blobId:\")) {  // See OAK-428\n+            return 7;\n+        }\n+        else if (jsonString.length() >= 4 && jsonString.charAt(3) == ':') {\n             return 3;\n         }\n         else {\n@@ -82,8 +87,8 @@ public class TypeCodes {\n         else {\n             Integer type = CODE2TYPE.get(jsonString.substring(0, split));\n             return type == null\n-                ? PropertyType.UNDEFINED\n-                : type;\n+                    ? PropertyType.UNDEFINED\n+                    : type;\n         }\n     }\n \n", "nb_test": 397, "nb_skipped": 1, "fix_commit": "916cd92f", "id": "428"}