{"nb_failure": 0, "nb_error": 2, "failing_tests": ["nodeStatus(org.apache.jackrabbit.oak.core.TreeImplTest): Cannot get the base state of a removed tree", "propertyStatus(org.apache.jackrabbit.oak.core.TreeImplTest): Cannot build the path of a removed tree"], "patch": "diff --git a/oak-core/src/main/java/org/apache/jackrabbit/oak/core/TreeImpl.java b/oak-core/src/main/java/org/apache/jackrabbit/oak/core/TreeImpl.java\nindex a3d3536..abc942a 100644\n--- a/oak-core/src/main/java/org/apache/jackrabbit/oak/core/TreeImpl.java\n+++ b/oak-core/src/main/java/org/apache/jackrabbit/oak/core/TreeImpl.java\n@@ -50,9 +50,12 @@ public class TreeImpl implements Tree, PurgeListener {\n     /** Underlying {@code Root} of this {@code Tree} instance */\n     private final RootImpl root;\n \n-    /** Parent of this tree. Null for the root and this for removed trees. */\n+    /** Parent of this tree. Null for the root. */\n     private TreeImpl parent;\n \n+    /** Marker for removed trees */\n+    private boolean removed;\n+\n     /** Name of this tree */\n     private String name;\n \n@@ -254,7 +257,7 @@ public class TreeImpl implements Tree, PurgeListener {\n             NodeBuilder builder = parent.getNodeBuilder();\n             builder.removeNode(name);\n             parent.children.remove(name);\n-            parent = this;\n+            removed = true;\n             root.purge();\n             return true;\n         } else {\n@@ -390,6 +393,10 @@ public class TreeImpl implements Tree, PurgeListener {\n     }\n \n     private Status internalGetPropertyStatus(String name) {\n+        if (isRemoved()) {\n+            return Status.REMOVED;\n+        }\n+\n         NodeState baseState = getBaseState();\n         boolean exists = internalGetProperty(name) != null;\n         if (baseState == null) {\n@@ -433,14 +440,10 @@ public class TreeImpl implements Tree, PurgeListener {\n     }\n \n     private boolean isRemoved() {\n-        return parent == this;\n+        return removed || (parent != null && parent.isRemoved());\n     }\n \n     private void buildPath(StringBuilder sb) {\n-        if (isRemoved()) {\n-            throw new IllegalStateException(\"Cannot build the path of a removed tree\");\n-        }\n-\n         if (!isRoot()) {\n             parent.buildPath(sb);\n             sb.append('/').append(name);\n", "nb_test": 231, "nb_skipped": 1, "fix_commit": "db19e70f", "id": "278"}