{"nb_failure": 0, "nb_error": 2, "failing_tests": ["xpath(org.apache.jackrabbit.oak.plugins.index.property.PropertyIndexQueryTest): Results in target/xpath.txt don't match expected results in src/test/resources/xpath.txt; compare the files for details", "xpath(org.apache.jackrabbit.oak.plugins.index.property.OrderedIndexQueryTest): Results in target/xpath.txt don't match expected results in src/test/resources/xpath.txt; compare the files for details"], "patch": "diff --git a/oak-core/src/main/java/org/apache/jackrabbit/oak/query/ast/FullTextSearchImpl.java b/oak-core/src/main/java/org/apache/jackrabbit/oak/query/ast/FullTextSearchImpl.java\nindex f922007..f93ed0e 100644\n--- a/oak-core/src/main/java/org/apache/jackrabbit/oak/query/ast/FullTextSearchImpl.java\n+++ b/oak-core/src/main/java/org/apache/jackrabbit/oak/query/ast/FullTextSearchImpl.java\n@@ -48,7 +48,7 @@ public class FullTextSearchImpl extends ConstraintImpl {\n      * instead, as in the spec, using double quotes.\n      */\n     public static final boolean JACKRABBIT_2_SINGLE_QUOTED_PHRASE = true;\n-    \n+\n     private final String selectorName;\n     private final String relativePath;\n     private final String propertyName;\n@@ -251,8 +251,12 @@ public class FullTextSearchImpl extends ConstraintImpl {\n     public void restrict(FilterImpl f) {\n         if (propertyName != null) {\n             if (f.getSelector().equals(selector)) {\n-                String pn = normalizePropertyName(propertyName);\n-                f.restrictProperty(pn, Operator.NOT_EQUAL, null);\n+                String p = propertyName;\n+                if (relativePath != null) {\n+                    p = PathUtils.concat(p, relativePath);\n+                }                \n+                p = normalizePropertyName(p);\n+                f.restrictProperty(p, Operator.NOT_EQUAL, null);\n             }\n         }\n         f.restrictFulltextCondition(fullTextSearchExpression.currentValue().getValue(Type.STRING));\ndiff --git a/oak-core/src/main/java/org/apache/jackrabbit/oak/query/index/FilterImpl.java b/oak-core/src/main/java/org/apache/jackrabbit/oak/query/index/FilterImpl.java\nindex 728973c..6f61a58 100644\n--- a/oak-core/src/main/java/org/apache/jackrabbit/oak/query/index/FilterImpl.java\n+++ b/oak-core/src/main/java/org/apache/jackrabbit/oak/query/index/FilterImpl.java\n@@ -401,7 +401,7 @@ public class FilterImpl implements Filter {\n             buff.append(\"query=\").append(queryStatement);\n         }\n         if (fullTextConstraint != null) {\n-            buff.append(\"fullText=\").append(fullTextConstraint);\n+            buff.append(\" fullText=\").append(fullTextConstraint);\n         }\n         buff.append(\", path=\").append(getPathPlan());\n         if (!propertyRestrictions.isEmpty()) {\ndiff --git a/oak-core/src/main/java/org/apache/jackrabbit/oak/query/xpath/Statement.java b/oak-core/src/main/java/org/apache/jackrabbit/oak/query/xpath/Statement.java\nindex 6113c0c..9763c13 100644\n--- a/oak-core/src/main/java/org/apache/jackrabbit/oak/query/xpath/Statement.java\n+++ b/oak-core/src/main/java/org/apache/jackrabbit/oak/query/xpath/Statement.java\n@@ -83,9 +83,7 @@ public class Statement {\n     }\n     \n     private static void addToUnionList(Expression condition,  ArrayList<Expression> unionList) {\n-        if (condition.containsFullTextCondition()) {\n-            // do not use union\n-        } else if (condition instanceof OrCondition) {\n+        if (condition instanceof OrCondition) {\n             OrCondition or = (OrCondition) condition;\n             // conditions of type                \n             // @x = 1 or @y = 2\ndiff --git a/oak-core/src/main/java/org/apache/jackrabbit/oak/spi/query/Cursors.java b/oak-core/src/main/java/org/apache/jackrabbit/oak/spi/query/Cursors.java\nindex 74060a1..10a459e 100644\n--- a/oak-core/src/main/java/org/apache/jackrabbit/oak/spi/query/Cursors.java\n+++ b/oak-core/src/main/java/org/apache/jackrabbit/oak/spi/query/Cursors.java\n@@ -439,7 +439,12 @@ public class Cursors {\n         ConcatCursor(List<Cursor> cursors, QueryEngineSettings settings) {\n             this.cursors = cursors;\n             this.settings = settings;\n-            this.currentCursor = cursors.remove(0);\n+            if (cursors.size() == 0) {\n+                init = true;\n+                closed = true;\n+            } else {\n+                this.currentCursor = cursors.remove(0);\n+            }\n         }\n \n         @Override\n", "nb_test": 1963, "nb_skipped": 9, "fix_commit": "6dde8e9d", "id": "2249"}