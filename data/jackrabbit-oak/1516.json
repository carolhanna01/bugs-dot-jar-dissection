{"files": 1, "singleLine": false, "nb_error": 0, "failing_tests": ["multiPhraseQuery(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexQueryTest)"], "nb_test": 249, "patch": "diff --git a/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndex.java b/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndex.java\nindex a16d437..467b64d 100644\n--- a/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndex.java\n+++ b/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndex.java\n@@ -707,7 +707,7 @@ public class LuceneIndex implements FulltextQueryIndex {\n                 MultiPhraseQuery mpq = new MultiPhraseQuery();\n                 for(String token: tokens){\n                     if (hasFulltextToken(token)) {\n-                        Term[] terms = extractMatchingTokens(reader, token);\n+                        Term[] terms = extractMatchingTokens(reader, fieldName, token);\n                         if (terms != null && terms.length > 0) {\n                             mpq.add(terms);\n                         }\n@@ -726,7 +726,7 @@ public class LuceneIndex implements FulltextQueryIndex {\n         }\n     }\n \n-    private static Term[] extractMatchingTokens(IndexReader reader, String token) {\n+    private static Term[] extractMatchingTokens(IndexReader reader, String fieldName, String token) {\n         if (reader == null) {\n             // getPlan call\n             return null;\n@@ -734,13 +734,14 @@ public class LuceneIndex implements FulltextQueryIndex {\n \n         try {\n             List<Term> terms = new ArrayList<Term>();\n-            Terms t = MultiFields.getTerms(reader, FieldNames.FULLTEXT);\n-            Automaton a = WildcardQuery.toAutomaton(newFulltextTerm(token));\n+            Term onTerm = newFulltextTerm(token, fieldName);\n+            Terms t = MultiFields.getTerms(reader, onTerm.field());\n+            Automaton a = WildcardQuery.toAutomaton(onTerm);\n             CompiledAutomaton ca = new CompiledAutomaton(a);\n             TermsEnum te = ca.getTermsEnum(t);\n             BytesRef text;\n             while ((text = te.next()) != null) {\n-                terms.add(newFulltextTerm(text.utf8ToString()));\n+                terms.add(newFulltextTerm(text.utf8ToString(), fieldName));\n             }\n             return terms.toArray(new Term[terms.size()]);\n         } catch (IOException e) {\n", "project": "jackrabbit-oak", "linesAdd": 6, "nb_skipped": 1, "fix_commit": "7c62bd81", "nb_failure": 1, "id": "1516", "linesRem": 5}