{"files": 1, "singleLine": false, "nb_error": 0, "failing_tests": ["testUnmodifiedEqualsBase(org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilderTest): expected:<null> but was:<{ q }>"], "nb_test": 399, "patch": "diff --git a/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/memory/MemoryNodeBuilder.java b/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/memory/MemoryNodeBuilder.java\nindex ce13f08..6600cc7 100644\n--- a/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/memory/MemoryNodeBuilder.java\n+++ b/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/memory/MemoryNodeBuilder.java\n@@ -24,7 +24,6 @@ import javax.annotation.Nonnull;\n \n import com.google.common.collect.ImmutableMap;\n import com.google.common.collect.Maps;\n-\n import org.apache.jackrabbit.oak.api.PropertyState;\n import org.apache.jackrabbit.oak.api.Type;\n import org.apache.jackrabbit.oak.spi.state.AbstractNodeState;\n@@ -268,11 +267,12 @@ public class MemoryNodeBuilder implements NodeBuilder {\n \n     @Override\n     public boolean isModified() {\n+        NodeState baseState = getBaseState();\n         if (writeState == null) {\n             return false;\n         }\n         else {\n-            NodeState baseState = getBaseState();\n+            Map<String, MutableNodeState> nodes = writeState.nodes;\n             for (Entry<String, MutableNodeState> n : writeState.nodes.entrySet()) {\n                 if (n.getValue() == null) {\n                     return true;\n@@ -308,6 +308,7 @@ public class MemoryNodeBuilder implements NodeBuilder {\n \n     @Override\n     public NodeState getBaseState() {\n+        read();\n         return baseState;\n     }\n \n", "project": "jackrabbit-oak", "linesAdd": 3, "nb_skipped": 1, "fix_commit": "999097e1", "nb_failure": 1, "id": "448", "linesRem": 2}