{
  "files": 1, 
  "singleLine": false, 
  "nb_error": 0, 
  "failing_tests": [
    "readBranchCommit(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreTest): must not access previous document: 3:p/test/r156362bd41c-4-1/0"
  ], 
  "nb_test": 2023, 
  "patch": "diff --git a/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/NodeDocument.java b/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/NodeDocument.java\nindex e617e17..1134673 100644\n--- a/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/NodeDocument.java\n+++ b/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/NodeDocument.java\n@@ -775,7 +775,7 @@ public final class NodeDocument extends Document implements CachedNodeDocument{\n             // check if there may be more recent values in a previous document\n             if (value != null && !getPreviousRanges().isEmpty()) {\n                 Revision newest = getLocalMap(key).firstKey();\n-                if (!value.revision.equals(newest)) {\n+                if (isRevisionNewer(nodeStore, newest, value.revision)) {\n                     // not reading the most recent value, we may need to\n                     // consider previous documents as well\n                     Revision newestPrev = getPreviousRanges().firstKey();\n", 
  "project": "jackrabbit-oak", 
  "linesAdd": 1, 
  "nb_skipped": 9, 
  "fix_commit": "d0f6715d", 
  "nb_failure": 1, 
  "id": "2336", 
  "linesRem": 1
}