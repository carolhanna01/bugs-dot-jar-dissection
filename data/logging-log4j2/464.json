{
  "files": 1, 
  "singleLine": false, 
  "nb_error": 0, 
  "failing_tests": [
    "AppenderRefLevelJsonTest.logger1:88 Incorrect number of events. Expected 6, actual 0", 
    "AppenderRefLevelJsonTest.logger2:102 Incorrect number of events. Expected 2, actual 0"
  ], 
  "nb_test": 479, 
  "patch": "diff --git a/log4j-core/src/main/java/org/apache/logging/log4j/core/config/JSONConfiguration.java b/log4j-core/src/main/java/org/apache/logging/log4j/core/config/JSONConfiguration.java\nindex be62509..892c45b 100644\n--- a/log4j-core/src/main/java/org/apache/logging/log4j/core/config/JSONConfiguration.java\n+++ b/log4j-core/src/main/java/org/apache/logging/log4j/core/config/JSONConfiguration.java\n@@ -232,7 +232,16 @@ public class JSONConfiguration extends BaseConfiguration implements Reconfigurab\n                             if (itemEntry.getValue().isObject()) {\n                                 LOGGER.debug(\"Processing node for object \" + itemEntry.getKey());\n                                 itemChildren.add(constructNode(itemEntry.getKey(), item, itemEntry.getValue()));\n+                            } else if (itemEntry.getValue().isArray()) {\n+                                JsonNode array = itemEntry.getValue();\n+                                String entryName = itemEntry.getKey();\n+                                LOGGER.debug(\"Processing array for object \" + entryName);\n+                                final PluginType<?> itemEntryType = pluginManager.getPluginType(entryName);\n+                                for (int j = 0; j < array.size(); ++j) {\n+                                    itemChildren.add(constructNode(entryName, item, array.get(j)));\n+                                }\n                             }\n+\n                         }\n                         children.add(item);\n                     }\n@@ -240,6 +249,8 @@ public class JSONConfiguration extends BaseConfiguration implements Reconfigurab\n                     LOGGER.debug(\"Processing node for object \" + entry.getKey());\n                     children.add(constructNode(entry.getKey(), node, n));\n                 }\n+            } else {\n+                LOGGER.debug(\"Node {} is of type {}\", entry.getKey(), n.getNodeType());\n             }\n         }\n \n", 
  "project": "logging-log4j2", 
  "linesAdd": 11, 
  "nb_skipped": 8, 
  "fix_commit": "484c865f", 
  "nb_failure": 2, 
  "id": "464", 
  "linesRem": 0
}