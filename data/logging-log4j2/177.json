{"nb_failure": 1, "nb_error": 0, "failing_tests": ["testReconnect(org.apache.logging.log4j.core.net.SocketReconnectTest): No header"], "patch": "diff --git a/core/src/main/java/org/apache/logging/log4j/core/appender/OutputStreamManager.java b/core/src/main/java/org/apache/logging/log4j/core/appender/OutputStreamManager.java\nindex 8d6b3a3..54fde20 100644\n--- a/core/src/main/java/org/apache/logging/log4j/core/appender/OutputStreamManager.java\n+++ b/core/src/main/java/org/apache/logging/log4j/core/appender/OutputStreamManager.java\n@@ -28,6 +28,7 @@ public class OutputStreamManager extends AbstractManager {\n     private OutputStream os;\n \n     private byte[] footer = null;\n+    private byte[] header = null;\n \n     protected OutputStreamManager(final OutputStream os, final String streamName) {\n         super(streamName);\n@@ -54,6 +55,7 @@ public class OutputStreamManager extends AbstractManager {\n      */\n     public synchronized void setHeader(final byte[] header) {\n         if (header != null) {\n+            this.header = header;\n             try {\n                 this.os.write(header, 0, header.length);\n             } catch (final IOException ioe) {\n@@ -97,6 +99,13 @@ public class OutputStreamManager extends AbstractManager {\n \n     protected void setOutputStream(final OutputStream os) {\n         this.os = os;\n+        if (header != null) {\n+            try {\n+                this.os.write(header, 0, header.length);\n+            } catch (final IOException ioe) {\n+                LOGGER.error(\"Unable to write header\", ioe);\n+            }\n+        }\n     }\n \n     /**\ndiff --git a/core/src/main/java/org/apache/logging/log4j/core/net/DatagramOutputStream.java b/core/src/main/java/org/apache/logging/log4j/core/net/DatagramOutputStream.java\nindex bf2a2e6..2fe3d9a 100644\n--- a/core/src/main/java/org/apache/logging/log4j/core/net/DatagramOutputStream.java\n+++ b/core/src/main/java/org/apache/logging/log4j/core/net/DatagramOutputStream.java\n@@ -89,7 +89,7 @@ public class DatagramOutputStream extends OutputStream {\n \n     @Override\n     public synchronized void flush() throws IOException {\n-        if (this.ds != null && this.address != null) {\n+        if (this.data != null && this.ds != null && this.address != null) {\n             final DatagramPacket packet = new DatagramPacket(data, data.length, address, port);\n             ds.send(packet);\n         }\n", "nb_test": 119, "nb_skipped": 0, "fix_commit": "f91ce934", "id": "177"}