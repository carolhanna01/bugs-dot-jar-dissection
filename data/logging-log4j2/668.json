{"files": 1, "singleLine": false, "nb_error": 0, "failing_tests": ["AsyncLoggersWithAsyncAppenderTest.testLoggingWorks:66 Incorrect number of events. Expected 2, got 0"], "nb_test": 658, "patch": "diff --git a/log4j-core/src/main/java/org/apache/logging/log4j/core/appender/AsyncAppender.java b/log4j-core/src/main/java/org/apache/logging/log4j/core/appender/AsyncAppender.java\nindex 8178fe2..e470757 100644\n--- a/log4j-core/src/main/java/org/apache/logging/log4j/core/appender/AsyncAppender.java\n+++ b/log4j-core/src/main/java/org/apache/logging/log4j/core/appender/AsyncAppender.java\n@@ -27,6 +27,7 @@ import java.util.concurrent.atomic.AtomicLong;\n import org.apache.logging.log4j.core.Appender;\n import org.apache.logging.log4j.core.Filter;\n import org.apache.logging.log4j.core.LogEvent;\n+import org.apache.logging.log4j.core.async.RingBufferLogEvent;\n import org.apache.logging.log4j.core.config.AppenderControl;\n import org.apache.logging.log4j.core.config.AppenderRef;\n import org.apache.logging.log4j.core.config.Configuration;\n@@ -127,12 +128,15 @@ public final class AsyncAppender extends AbstractAppender {\n      * @param logEvent The LogEvent.\n      */\n     @Override\n-    public void append(final LogEvent logEvent) {\n+    public void append(LogEvent logEvent) {\n         if (!isStarted()) {\n             throw new IllegalStateException(\"AsyncAppender \" + getName() + \" is not active\");\n         }\n         if (!(logEvent instanceof Log4jLogEvent)) {\n-            return; // only know how to Serialize Log4jLogEvents\n+            if (!(logEvent instanceof RingBufferLogEvent)) {\n+                return; // only know how to Serialize Log4jLogEvents and RingBufferLogEvents\n+            }\n+            logEvent = ((RingBufferLogEvent) logEvent).createMemento();\n         }\n         Log4jLogEvent coreEvent = (Log4jLogEvent) logEvent;\n         boolean appendSuccessful = false;\n", "project": "logging-log4j2", "linesAdd": 6, "nb_skipped": 2, "fix_commit": "60f64cc1", "nb_failure": 1, "id": "668", "linesRem": 2}