{"nb_failure": 1, "nb_error": 0, "failing_tests": ["HashTableTest.testSpillingFreesOnlyOverflowSegments:188 Bug in Hybrid Hash Join: Request to spill a partition with less than two buffers."], "patch": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/operators/hash/HashPartition.java b/flink-runtime/src/main/java/org/apache/flink/runtime/operators/hash/HashPartition.java\nindex 7baaee7..32fd74a 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/operators/hash/HashPartition.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/operators/hash/HashPartition.java\n@@ -198,6 +198,19 @@ public class HashPartition<BT, PT> extends AbstractPagedInputView implements See\n \tpublic final boolean isInMemory() {\n \t\treturn this.buildSideChannel == null;\n \t}\n+\n+\t/**\n+\t * Gets the number of memory segments used by this partition, which includes build side\n+\t * memory buffers and overflow memory segments.\n+\t * \n+\t * @return The number of occupied memory segments.\n+\t */\n+\tpublic int getNumOccupiedMemorySegments() {\n+\t\t// either the number of memory segments, or one for spilling\n+\t\tfinal int numPartitionBuffers = this.partitionBuffers != null ? this.partitionBuffers.length : 1;\n+\t\treturn numPartitionBuffers + numOverflowSegments;\n+\t}\n+\t\n \t\n \tpublic int getBuildSideBlockCount() {\n \t\treturn this.partitionBuffers == null ? this.buildSideWriteBuffer.getBlockCount() : this.partitionBuffers.length;\n@@ -284,7 +297,7 @@ public class HashPartition<BT, PT> extends AbstractPagedInputView implements See\n \t\t\tthrow new RuntimeException(\"Bug in Hybrid Hash Join: \" +\n \t\t\t\t\t\"Request to spill a partition that has already been spilled.\");\n \t\t}\n-\t\tif (getBuildSideBlockCount() + this.numOverflowSegments < 2) {\n+\t\tif (getNumOccupiedMemorySegments() < 2) {\n \t\t\tthrow new RuntimeException(\"Bug in Hybrid Hash Join: \" +\n \t\t\t\t\"Request to spill a partition with less than two buffers.\");\n \t\t}\ndiff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/operators/hash/MutableHashTable.java b/flink-runtime/src/main/java/org/apache/flink/runtime/operators/hash/MutableHashTable.java\nindex 2ad01aa..efaceea 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/operators/hash/MutableHashTable.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/operators/hash/MutableHashTable.java\n@@ -1093,8 +1093,8 @@ public class MutableHashTable<BT, PT> implements MemorySegmentSource {\n \t\t\n \t\tfor (int i = 0; i < partitions.size(); i++) {\n \t\t\tHashPartition<BT, PT> p = partitions.get(i);\n-\t\t\tif (p.isInMemory() && p.getBuildSideBlockCount() > largestNumBlocks) {\n-\t\t\t\tlargestNumBlocks = p.getBuildSideBlockCount();\n+\t\t\tif (p.isInMemory() && p.getNumOccupiedMemorySegments() > largestNumBlocks) {\n+\t\t\t\tlargestNumBlocks = p.getNumOccupiedMemorySegments();\n \t\t\t\tlargestPartNum = i;\n \t\t\t}\n \t\t}\n", "nb_test": 832, "nb_skipped": 0, "fix_commit": "af477563", "id": "2763"}