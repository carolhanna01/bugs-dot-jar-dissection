{
  "project": "flink",
  "jira_id": "15914",
  "commit": "2558c9ee",
  "classification": {
    "singleLine": false
  },
  "patch": "diff --git a/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/io/CheckpointedInputGate.java b/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/io/CheckpointedInputGate.java\nindex d7caa036545..df3709041ea 100644\n--- a/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/io/CheckpointedInputGate.java\n+++ b/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/io/CheckpointedInputGate.java\n@@ -18,6 +18,7 @@\n package org.apache.flink.streaming.runtime.io;\n \n import org.apache.flink.annotation.Internal;\n+import org.apache.flink.annotation.VisibleForTesting;\n import org.apache.flink.runtime.io.PullingAsyncDataInput;\n import org.apache.flink.runtime.io.network.api.CancelCheckpointMarker;\n import org.apache.flink.runtime.io.network.api.CheckpointBarrier;\n@@ -233,7 +234,8 @@ public class CheckpointedInputGate implements PullingAsyncDataInput<BufferOrEven\n \t *\n \t * @return The duration in nanoseconds\n \t */\n-\tpublic long getAlignmentDurationNanos() {\n+\t@VisibleForTesting\n+\tlong getAlignmentDurationNanos() {\n \t\treturn barrierHandler.getAlignmentDurationNanos();\n \t}\n \n@@ -241,7 +243,8 @@ public class CheckpointedInputGate implements PullingAsyncDataInput<BufferOrEven\n \t * @return the time that elapsed, in nanoseconds, between the creation of the latest checkpoint\n \t * and the time when it's first {@link CheckpointBarrier} was received by this {@link InputGate}.\n \t */\n-\tpublic long getCheckpointStartDelayNanos() {\n+\t@VisibleForTesting\n+\tlong getCheckpointStartDelayNanos() {\n \t\treturn barrierHandler.getCheckpointStartDelayNanos();\n \t}\n \ndiff --git a/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/io/InputProcessorUtil.java b/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/io/InputProcessorUtil.java\nindex 11b3eadeb88..7f4f78da16b 100644\n--- a/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/io/InputProcessorUtil.java\n+++ b/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/io/InputProcessorUtil.java\n@@ -23,6 +23,8 @@ import org.apache.flink.configuration.IllegalConfigurationException;\n import org.apache.flink.configuration.TaskManagerOptions;\n import org.apache.flink.runtime.io.network.partition.consumer.InputGate;\n import org.apache.flink.runtime.jobgraph.tasks.AbstractInvokable;\n+import org.apache.flink.runtime.metrics.MetricNames;\n+import org.apache.flink.runtime.metrics.groups.TaskIOMetricGroup;\n import org.apache.flink.runtime.util.ConfigurationParserUtils;\n import org.apache.flink.streaming.api.CheckpointingMode;\n \n@@ -40,6 +42,7 @@ public class InputProcessorUtil {\n \t\t\tCheckpointingMode checkpointMode,\n \t\t\tInputGate inputGate,\n \t\t\tConfiguration taskManagerConfig,\n+\t\t\tTaskIOMetricGroup taskIOMetricGroup,\n \t\t\tString taskName) {\n \n \t\tint pageSize = ConfigurationParserUtils.getPageSize(taskManagerConfig);\n@@ -48,6 +51,8 @@ public class InputProcessorUtil {\n \t\t\tcheckpointMode, pageSize, taskManagerConfig, taskName);\n \t\tCheckpointBarrierHandler barrierHandler = createCheckpointBarrierHandler(\n \t\t\tcheckpointMode, inputGate.getNumberOfInputChannels(), taskName, toNotifyOnCheckpoint);\n+\t\tregisterCheckpointMetrics(taskIOMetricGroup, barrierHandler);\n+\n \t\treturn new CheckpointedInputGate(inputGate, bufferStorage, barrierHandler);\n \t}\n \n@@ -61,6 +66,7 @@ public class InputProcessorUtil {\n \t\t\tInputGate inputGate1,\n \t\t\tInputGate inputGate2,\n \t\t\tConfiguration taskManagerConfig,\n+\t\t\tTaskIOMetricGroup taskIOMetricGroup,\n \t\t\tString taskName) {\n \n \t\tint pageSize = ConfigurationParserUtils.getPageSize(taskManagerConfig);\n@@ -85,6 +91,8 @@ public class InputProcessorUtil {\n \t\t\tinputGate1.getNumberOfInputChannels() + inputGate2.getNumberOfInputChannels(),\n \t\t\ttaskName,\n \t\t\ttoNotifyOnCheckpoint);\n+\t\tregisterCheckpointMetrics(taskIOMetricGroup, barrierHandler);\n+\n \t\treturn new CheckpointedInputGate[] {\n \t\t\tnew CheckpointedInputGate(inputGate1, linkedBufferStorage1, barrierHandler),\n \t\t\tnew CheckpointedInputGate(inputGate2, linkedBufferStorage2, barrierHandler, inputGate1.getNumberOfInputChannels())\n@@ -130,4 +138,9 @@ public class InputProcessorUtil {\n \t\t\t\tthrow new UnsupportedOperationException(\"Unrecognized Checkpointing Mode: \" + checkpointMode);\n \t\t}\n \t}\n+\n+\tprivate static void registerCheckpointMetrics(TaskIOMetricGroup taskIOMetricGroup, CheckpointBarrierHandler barrierHandler) {\n+\t\ttaskIOMetricGroup.gauge(MetricNames.CHECKPOINT_ALIGNMENT_TIME, barrierHandler::getAlignmentDurationNanos);\n+\t\ttaskIOMetricGroup.gauge(MetricNames.CHECKPOINT_START_DELAY_TIME, barrierHandler::getCheckpointStartDelayNanos);\n+\t}\n }\ndiff --git a/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/OneInputStreamTask.java b/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/OneInputStreamTask.java\nindex 5a6cdc830a4..e5bf8d501ae 100644\n--- a/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/OneInputStreamTask.java\n+++ b/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/OneInputStreamTask.java\n@@ -25,7 +25,6 @@ import org.apache.flink.metrics.Counter;\n import org.apache.flink.runtime.execution.Environment;\n import org.apache.flink.runtime.io.network.partition.consumer.InputGate;\n import org.apache.flink.runtime.metrics.MetricNames;\n-import org.apache.flink.runtime.metrics.groups.TaskIOMetricGroup;\n import org.apache.flink.streaming.api.graph.StreamConfig;\n import org.apache.flink.streaming.api.operators.OneInputStreamOperator;\n import org.apache.flink.streaming.api.watermark.Watermark;\n@@ -88,10 +87,6 @@ public class OneInputStreamTask<IN, OUT> extends StreamTask<OUT, OneInputStreamO\n \n \t\tif (numberOfInputs > 0) {\n \t\t\tCheckpointedInputGate inputGate = createCheckpointedInputGate();\n-\t\t\tTaskIOMetricGroup taskIOMetricGroup = getEnvironment().getMetricGroup().getIOMetricGroup();\n-\t\t\ttaskIOMetricGroup.gauge(\"checkpointAlignmentTime\", inputGate::getAlignmentDurationNanos);\n-\t\t\ttaskIOMetricGroup.gauge(\"checkpointStartDelayNanos\", inputGate::getCheckpointStartDelayNanos);\n-\n \t\t\tDataOutput<IN> output = createDataOutput();\n \t\t\tStreamTaskInput<IN> input = createTaskInput(inputGate, output);\n \t\t\tinputProcessor = new StreamOneInputProcessor<>(\n@@ -114,6 +109,7 @@ public class OneInputStreamTask<IN, OUT> extends StreamTask<OUT, OneInputStreamO\n \t\t\tconfiguration.getCheckpointMode(),\n \t\t\tinputGate,\n \t\t\tgetEnvironment().getTaskManagerInfo().getConfiguration(),\n+\t\t\tgetEnvironment().getMetricGroup().getIOMetricGroup(),\n \t\t\tgetTaskNameWithSubtaskAndId());\n \t}\n \ndiff --git a/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/TwoInputStreamTask.java b/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/TwoInputStreamTask.java\nindex 5100a135272..078db8de5b3 100644\n--- a/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/TwoInputStreamTask.java\n+++ b/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/TwoInputStreamTask.java\n@@ -64,6 +64,7 @@ public class TwoInputStreamTask<IN1, IN2, OUT> extends AbstractTwoInputStreamTas\n \t\t\tunionedInputGate1,\n \t\t\tunionedInputGate2,\n \t\t\tgetEnvironment().getTaskManagerInfo().getConfiguration(),\n+\t\t\tgetEnvironment().getMetricGroup().getIOMetricGroup(),\n \t\t\tgetTaskNameWithSubtaskAndId());\n \t\tcheckState(checkpointedInputGates.length == 2);\n \n",
  "files": 4,
  "linesAdd": 20,
  "linesRem": 7,
  "failing_tests": ["org.apache.flink.streaming.runtime.tasks.TwoInputStreamTaskTest.testCheckpointBarrierMetrics"],
  "nb_test": 1416,
  "nb_failure": 1,
  "nb_error": 0,
  "nb_skipped": 56
}