{
  "files": 1, 
  "singleLine": false, 
  "nb_error": 1, 
  "failing_tests": [
    "SimpleCheckpointStatsTrackerTest.testIllegalOperatorId:88 \u00bb IllegalArgument Un..."
  ], 
  "nb_test": 940, 
  "patch": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/stats/SimpleCheckpointStatsTracker.java b/flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/stats/SimpleCheckpointStatsTracker.java\nindex 5881f4f..fba3f22 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/stats/SimpleCheckpointStatsTracker.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/stats/SimpleCheckpointStatsTracker.java\n@@ -299,31 +299,32 @@ public class SimpleCheckpointStatsTracker implements CheckpointStatsTracker {\n \t\t\t\tlong[][] subTaskStats = this.subTaskStats.get(operatorId);\n \n \t\t\t\tif (subTaskStats == null) {\n-\t\t\t\t\tthrow new IllegalArgumentException(\"Unknown operator ID.\");\n+\t\t\t\t\treturn Option.empty();\n \t\t\t\t}\n+\t\t\t\telse {\n+\t\t\t\t\tlong maxDuration = Long.MIN_VALUE;\n+\t\t\t\t\tlong stateSize = 0;\n \n-\t\t\t\tlong maxDuration = Long.MIN_VALUE;\n-\t\t\t\tlong stateSize = 0;\n+\t\t\t\t\tfor (long[] subTaskStat : subTaskStats) {\n+\t\t\t\t\t\tif (subTaskStat[0] > maxDuration) {\n+\t\t\t\t\t\t\tmaxDuration = subTaskStat[0];\n+\t\t\t\t\t\t}\n \n-\t\t\t\tfor (long[] subTaskStat : subTaskStats) {\n-\t\t\t\t\tif (subTaskStat[0] > maxDuration) {\n-\t\t\t\t\t\tmaxDuration = subTaskStat[0];\n+\t\t\t\t\t\tstateSize += subTaskStat[1];\n \t\t\t\t\t}\n \n-\t\t\t\t\tstateSize += subTaskStat[1];\n-\t\t\t\t}\n-\n-\t\t\t\tstats = new OperatorCheckpointStats(\n-\t\t\t\t\t\tlatestCompletedCheckpoint.getCheckpointID(),\n-\t\t\t\t\t\tlatestCompletedCheckpoint.getTimestamp(),\n-\t\t\t\t\t\tmaxDuration,\n-\t\t\t\t\t\tstateSize,\n-\t\t\t\t\t\tsubTaskStats);\n+\t\t\t\t\tstats = new OperatorCheckpointStats(\n+\t\t\t\t\t\t\tlatestCompletedCheckpoint.getCheckpointID(),\n+\t\t\t\t\t\t\tlatestCompletedCheckpoint.getTimestamp(),\n+\t\t\t\t\t\t\tmaxDuration,\n+\t\t\t\t\t\t\tstateSize,\n+\t\t\t\t\t\t\tsubTaskStats);\n \n-\t\t\t\t// Remember this and don't recompute if requested again\n-\t\t\t\toperatorStatsCache.put(operatorId, stats);\n+\t\t\t\t\t// Remember this and don't recompute if requested again\n+\t\t\t\t\toperatorStatsCache.put(operatorId, stats);\n \n-\t\t\t\treturn Option.apply(stats);\n+\t\t\t\t\treturn Option.apply(stats);\n+\t\t\t\t}\n \t\t\t}\n \t\t\telse {\n \t\t\t\treturn Option.empty();\n", 
  "project": "flink", 
  "linesAdd": 19, 
  "nb_skipped": 1, 
  "fix_commit": "117ba95f", 
  "nb_failure": 0, 
  "id": "3251", 
  "linesRem": 18
}