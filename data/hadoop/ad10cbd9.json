{
  "project": "hadoop",
  "jira_id": "8085",
  "commit": "ad10cbd9",
  "classification": {
    "singleLine": false
  },
  "patch": "diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMActiveServiceContext.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMActiveServiceContext.java\nindex 06a1d00d95..66065e33ba 100644\n--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMActiveServiceContext.java\n+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMActiveServiceContext.java\n@@ -36,6 +36,7 @@\n import org.apache.hadoop.yarn.server.resourcemanager.recovery.NullRMStateStore;\n import org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStore;\n import org.apache.hadoop.yarn.server.resourcemanager.reservation.ReservationSystem;\n+import org.apache.hadoop.yarn.server.resourcemanager.resource.ResourceProfilesManager;\n import org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMApp;\n import org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.AMLivelinessMonitor;\n import org.apache.hadoop.yarn.server.resourcemanager.rmapp.monitor.RMAppLifetimeMonitor;\n@@ -111,6 +112,7 @@ public class RMActiveServiceContext {\n   private QueueLimitCalculator queueLimitCalculator;\n   private AllocationTagsManager allocationTagsManager;\n   private PlacementConstraintManager placementConstraintManager;\n+  private ResourceProfilesManager resourceProfilesManager;\n \n   public RMActiveServiceContext() {\n     queuePlacementManager = new PlacementManager();\n@@ -513,4 +515,13 @@ public void setContainerQueueLimitCalculator(\n       QueueLimitCalculator limitCalculator) {\n     this.queueLimitCalculator = limitCalculator;\n   }\n+\n+  public ResourceProfilesManager getResourceProfilesManager() {\n+    return resourceProfilesManager;\n+  }\n+\n+  public void setResourceProfilesManager(\n+      ResourceProfilesManager resourceProfilesManager) {\n+    this.resourceProfilesManager = resourceProfilesManager;\n+  }\n }\ndiff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMContextImpl.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMContextImpl.java\nindex 0b6be722ac..84e0f6f6b5 100644\n--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMContextImpl.java\n+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMContextImpl.java\n@@ -93,8 +93,6 @@ public class RMContextImpl implements RMContext {\n    */\n   private RMActiveServiceContext activeServiceContext;\n \n-  private ResourceProfilesManager resourceProfilesManager;\n-\n   private String proxyHostAndPort = null;\n \n   /**\n@@ -591,7 +589,7 @@ public RMAppLifetimeMonitor getRMAppLifetimeMonitor() {\n \n   @Override\n   public ResourceProfilesManager getResourceProfilesManager() {\n-    return this.resourceProfilesManager;\n+    return this.activeServiceContext.getResourceProfilesManager();\n   }\n \n   String getProxyHostAndPort(Configuration conf) {\n@@ -619,7 +617,7 @@ public String getAppProxyUrl(Configuration conf, ApplicationId applicationId)\n \n   @Override\n   public void setResourceProfilesManager(ResourceProfilesManager mgr) {\n-    this.resourceProfilesManager = mgr;\n+    this.activeServiceContext.setResourceProfilesManager(mgr);\n   }\n   // Note: Read java doc before adding any services over here.\n }\ndiff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java\nindex 38da7f5e5c..733da5bd71 100644\n--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java\n+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java\n@@ -245,13 +245,6 @@ protected void serviceInit(Configuration conf) throws Exception {\n     this.rmContext = new RMContextImpl();\n     rmContext.setResourceManager(this);\n \n-\n-    // add resource profiles here because it's used by AbstractYarnScheduler\n-    ResourceProfilesManager resourceProfilesManager =\n-        createResourceProfileManager();\n-    resourceProfilesManager.init(conf);\n-    rmContext.setResourceProfilesManager(resourceProfilesManager);\n-\n     this.configurationProvider =\n         ConfigurationProviderFactory.getConfigurationProvider(conf);\n     this.configurationProvider.init(this.conf);\n@@ -655,6 +648,12 @@ protected void serviceInit(Configuration configuration) throws Exception {\n       addService(placementConstraintManager);\n       rmContext.setPlacementConstraintManager(placementConstraintManager);\n \n+      // add resource profiles here because it's used by AbstractYarnScheduler\n+      ResourceProfilesManager resourceProfilesManager =\n+          createResourceProfileManager();\n+      resourceProfilesManager.init(conf);\n+      rmContext.setResourceProfilesManager(resourceProfilesManager);\n+\n       RMDelegatedNodeLabelsUpdater delegatedNodeLabelsUpdater =\n           createRMDelegatedNodeLabelsUpdater();\n       if (delegatedNodeLabelsUpdater != null) {\n",
  "files": 3,
  "linesAdd": 19,
  "linesRem": 11,
  "failing_tests": [
    "org.apache.hadoop.yarn.server.resourcemanager.TestRMHA.testResourceProfilesManagerAfterRMWentStandbyThenBackToActive"
  ],
  "nb_test": 2213,
  "nb_failure": 1,
  "nb_error": 0,
  "nb_skipped": 7
}