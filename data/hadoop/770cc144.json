{
  "project": "hadoop",
  "jira_id": "2834",
  "commit": "770cc144",
  "classification": {
    "singleLine": false
  },
  "patch": "diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java\nindex 9b10872641..ad92cc463a 100644\n--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java\n+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java\n@@ -714,7 +714,7 @@ public void handle(RMAppEvent event) {\n   }\n \n   @Override\n-  public void recover(RMState state) throws Exception{\n+  public void recover(RMState state) {\n     ApplicationState appState = state.getApplicationState().get(getApplicationId());\n     this.recoveredFinalState = appState.getState();\n     LOG.info(\"Recovering app: \" + getApplicationId() + \" with \" + \n@@ -830,14 +830,7 @@ private static final class RMAppRecoveredTransition implements\n     public RMAppState transition(RMAppImpl app, RMAppEvent event) {\n \n       RMAppRecoverEvent recoverEvent = (RMAppRecoverEvent) event;\n-      try {\n       app.recover(recoverEvent.getRMState());\n-      } catch (Exception e) {\n-        String msg = app.applicationId + \" failed to recover. \" + e.getMessage();\n-        failToRecoverApp(app, event, msg, e);\n-        return RMAppState.FINAL_SAVING;\n-      }\n-\n       // The app has completed.\n       if (app.recoveredFinalState != null) {\n         app.recoverAppAttempts();\n@@ -852,10 +845,10 @@ public RMAppState transition(RMAppImpl app, RMAppEvent event) {\n             app.getApplicationId(), app.parseCredentials(),\n             app.submissionContext.getCancelTokensWhenComplete(), app.getUser());\n         } catch (Exception e) {\n-          String msg = \"Failed to renew delegation token on recovery for \"\n-              + app.applicationId + e.getMessage();\n-          failToRecoverApp(app, event, msg, e);\n-          return RMAppState.FINAL_SAVING;\n+          String msg = \"Failed to renew token for \" + app.applicationId\n+                  + \" on recovery : \" + e.getMessage();\n+          app.diagnostics.append(msg);\n+          LOG.error(msg, e);\n         }\n       }\n \n@@ -892,14 +885,6 @@ public RMAppState transition(RMAppImpl app, RMAppEvent event) {\n       // Thus we return ACCECPTED state on recovery.\n       return RMAppState.ACCEPTED;\n     }\n-\n-    private void failToRecoverApp(RMAppImpl app, RMAppEvent event, String msg,\n-        Exception e) {\n-      app.diagnostics.append(msg);\n-      LOG.error(msg, e);\n-      app.rememberTargetTransitionsAndStoreState(event, new FinalTransition(\n-        RMAppState.FAILED), RMAppState.FAILED, RMAppState.FAILED);\n-    }\n   }\n \n   private static final class AddApplicationToSchedulerTransition extends\ndiff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java\nindex d3fe151017..0d7e33451f 100644\n--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java\n+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java\n@@ -789,7 +789,7 @@ public ApplicationResourceUsageReport getApplicationResourceUsageReport() {\n   }\n \n   @Override\n-  public void recover(RMState state) throws Exception {\n+  public void recover(RMState state) {\n     ApplicationState appState =\n         state.getApplicationState().get(getAppAttemptId().getApplicationId());\n     ApplicationAttemptState attemptState =\n@@ -823,7 +823,7 @@ public void transferStateFromPreviousAttempt(RMAppAttempt attempt) {\n   }\n \n   private void recoverAppAttemptCredentials(Credentials appAttemptTokens,\n-      RMAppAttemptState state) throws IOException {\n+      RMAppAttemptState state) {\n     if (appAttemptTokens == null || state == RMAppAttemptState.FAILED\n         || state == RMAppAttemptState.FINISHED\n         || state == RMAppAttemptState.KILLED) {\n",
  "files": 2,
  "linesAdd": 7,
  "linesRem": 22,
  "failing_tests": [
    "org.apache.hadoop.yarn.server.resourcemanager.TestClientRMService.testGetApplications"
  ],
  "nb_test": 941,
  "nb_failure": 1,
  "nb_error": 3,
  "nb_skipped": 1
}